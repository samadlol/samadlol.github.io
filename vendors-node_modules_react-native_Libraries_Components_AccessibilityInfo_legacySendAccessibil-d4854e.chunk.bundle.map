{"version":3,"file":"vendors-node_modules_react-native_Libraries_Components_AccessibilityInfo_legacySendAccessibil-d4854e.chunk.bundle","sources":["webpack://ni-miniappdemo/../../node_modules/react-native/Libraries/Components/AccessibilityInfo/NativeAccessibilityManager.js","webpack://ni-miniappdemo/../../node_modules/react-native/Libraries/Components/TextInput/AndroidTextInputNativeComponent.js","webpack://ni-miniappdemo/../../node_modules/react-native/Libraries/Components/TextInput/RCTSingelineTextInputNativeComponent.js","webpack://ni-miniappdemo/../../node_modules/react-native/src/private/featureflags/specs/NativeReactNativeFeatureFlags.js","webpack://ni-miniappdemo/../../node_modules/react-native/src/private/specs/modules/NativeAccessibilityManager.js","webpack://ni-miniappdemo/../../node_modules/react-native/Libraries/Components/AccessibilityInfo/legacySendAccessibilityEvent.ios.js","webpack://ni-miniappdemo/../../node_modules/react-native/Libraries/Components/TextInput/RCTTextInputViewConfig.js","webpack://ni-miniappdemo/../../node_modules/react-native/Libraries/Components/TextInput/TextInputState.js","webpack://ni-miniappdemo/../../node_modules/react-native/Libraries/StyleSheet/flattenStyle.js","webpack://ni-miniappdemo/../../node_modules/react-native/Libraries/Utilities/codegenNativeCommands.js","webpack://ni-miniappdemo/../../node_modules/react-native/Libraries/Utilities/differ/deepDiffer.js","webpack://ni-miniappdemo/../../node_modules/react-native/src/private/featureflags/ReactNativeFeatureFlags.js","webpack://ni-miniappdemo/../../node_modules/react-native/src/private/featureflags/ReactNativeFeatureFlagsBase.js"],"sourcesContent":["export * from '../../../src/private/specs/modules/NativeAccessibilityManager';\nimport NativeAccessibilityManager from '../../../src/private/specs/modules/NativeAccessibilityManager';\nexport default NativeAccessibilityManager;","                                                                                              \n                                                                                            \n                                                                                                                            \n                                                       \n                                                                         \nimport * as NativeComponentRegistry from '../../NativeComponent/NativeComponentRegistry';\nimport codegenNativeCommands from '../../Utilities/codegenNativeCommands';\n                                                                                                                                                                                                                                         \n                                                                                                                                                                    \n                                                                    \n                                      \n                                  \n                         \n       \n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                \n                           \n                         \n                                 \n                                                                                   \n                                      \n                            \n                              \n                                \n                                  \n                                                                                      \n                         \n                       \n                              \n                                 \n                      \n                                                      \n                                                     \n                     \n                       \n                                             \n                 \n       \n                                              \n                 \n       \n                                               \n                  \n                      \n                 \n       \n                                                   \n                  \n                      \n                 \n       \n                                                        \n                  \n                             \n                    \n                     \n        \n       \n                                                   \n                  \n                 \n       \n                                                      \n                  \n                           \n                    \n                  \n        \n       \n                                                      \n                  \n                 \n       \n                                                 \n                  \n                \n       \n                                             \n                  \n                                   \n                              \n                  \n                     \n                   \n                    \n        \n                               \n                \n                \n        \n                             \n                    \n                     \n        \n                                   \n                    \n                     \n        \n                          \n                \n                \n        \n       \n                           \n                                     \n                             \n                               \n                                     \n                           \n                 \n                 \n      \n                  \n                         \n                               \n                          \n                                   \n                         \n                         \n                               \n                                \n                            \n                               \n                      \n                                  \n                    \n                     \n      \n                      \n                          \n                 \n                         \n                    \n                      \n                                \n                       \n                       \n                              \n                            \n                              \n                 \n    \n                                             \n                                                          \nexport const Commands                 = codegenNativeCommands                ({\n  supportedCommands: ['focus', 'blur', 'setTextAndSelection']\n});\nexport const __INTERNAL_VIEW_CONFIG                    = {\n  uiViewClassName: 'AndroidTextInput',\n  bubblingEventTypes: {\n    topBlur: {\n      phasedRegistrationNames: {\n        bubbled: 'onBlur',\n        captured: 'onBlurCapture'\n      }\n    },\n    topEndEditing: {\n      phasedRegistrationNames: {\n        bubbled: 'onEndEditing',\n        captured: 'onEndEditingCapture'\n      }\n    },\n    topFocus: {\n      phasedRegistrationNames: {\n        bubbled: 'onFocus',\n        captured: 'onFocusCapture'\n      }\n    },\n    topKeyPress: {\n      phasedRegistrationNames: {\n        bubbled: 'onKeyPress',\n        captured: 'onKeyPressCapture'\n      }\n    },\n    topSubmitEditing: {\n      phasedRegistrationNames: {\n        bubbled: 'onSubmitEditing',\n        captured: 'onSubmitEditingCapture'\n      }\n    }\n  },\n  directEventTypes: {\n    topScroll: {\n      registrationName: 'onScroll'\n    }\n  },\n  validAttributes: {\n    maxFontSizeMultiplier: true,\n    adjustsFontSizeToFit: true,\n    minimumFontScale: true,\n    autoFocus: true,\n    placeholder: true,\n    inlineImagePadding: true,\n    contextMenuHidden: true,\n    textShadowColor: {\n      process: require('../../StyleSheet/processColor').default\n    },\n    maxLength: true,\n    selectTextOnFocus: true,\n    textShadowRadius: true,\n    underlineColorAndroid: {\n      process: require('../../StyleSheet/processColor').default\n    },\n    textDecorationLine: true,\n    submitBehavior: true,\n    textAlignVertical: true,\n    fontStyle: true,\n    textShadowOffset: true,\n    selectionColor: {\n      process: require('../../StyleSheet/processColor').default\n    },\n    selectionHandleColor: {\n      process: require('../../StyleSheet/processColor').default\n    },\n    placeholderTextColor: {\n      process: require('../../StyleSheet/processColor').default\n    },\n    importantForAutofill: true,\n    lineHeight: true,\n    textTransform: true,\n    returnKeyType: true,\n    keyboardType: true,\n    multiline: true,\n    color: {\n      process: require('../../StyleSheet/processColor').default\n    },\n    autoComplete: true,\n    numberOfLines: true,\n    letterSpacing: true,\n    returnKeyLabel: true,\n    fontSize: true,\n    onKeyPress: true,\n    cursorColor: {\n      process: require('../../StyleSheet/processColor').default\n    },\n    text: true,\n    showSoftInputOnFocus: true,\n    textAlign: true,\n    autoCapitalize: true,\n    autoCorrect: true,\n    caretHidden: true,\n    secureTextEntry: true,\n    textBreakStrategy: true,\n    onScroll: true,\n    onContentSizeChange: true,\n    disableFullscreenUI: true,\n    includeFontPadding: true,\n    fontWeight: true,\n    fontFamily: true,\n    allowFontScaling: true,\n    onSelectionChange: true,\n    mostRecentEventCount: true,\n    inlineImageLeft: true,\n    editable: true,\n    fontVariant: true,\n    borderBottomRightRadius: true,\n    borderBottomColor: {\n      process: require('../../StyleSheet/processColor').default\n    },\n    borderRadius: true,\n    borderRightColor: {\n      process: require('../../StyleSheet/processColor').default\n    },\n    borderColor: {\n      process: require('../../StyleSheet/processColor').default\n    },\n    borderTopRightRadius: true,\n    borderStyle: true,\n    borderBottomLeftRadius: true,\n    borderLeftColor: {\n      process: require('../../StyleSheet/processColor').default\n    },\n    borderTopLeftRadius: true,\n    borderTopColor: {\n      process: require('../../StyleSheet/processColor').default\n    }\n  }\n};\nlet AndroidTextInputNativeComponent = NativeComponentRegistry.get             ('AndroidTextInput', () => __INTERNAL_VIEW_CONFIG);\nexport default ((AndroidTextInputNativeComponent     )                            );","                                                                                              \n                                                                         \nimport * as NativeComponentRegistry from '../../NativeComponent/NativeComponentRegistry';\nimport codegenNativeCommands from '../../Utilities/codegenNativeCommands';\nimport RCTTextInputViewConfig from './RCTTextInputViewConfig';\n                                       \n                                                          \nexport const Commands                 = codegenNativeCommands                ({\n  supportedCommands: ['focus', 'blur', 'setTextAndSelection']\n});\nexport const __INTERNAL_VIEW_CONFIG                    = {\n  uiViewClassName: 'RCTSinglelineTextInputView',\n  ...RCTTextInputViewConfig\n};\nconst SinglelineTextInputNativeComponent                       = NativeComponentRegistry.get       ('RCTSinglelineTextInputView', () => __INTERNAL_VIEW_CONFIG);\nexport default ((SinglelineTextInputNativeComponent     )                      );","                                                                               \nimport * as TurboModuleRegistry from '../../../../Libraries/TurboModule/TurboModuleRegistry';\n                                           \n                                  \n                                            \n                                                                      \n                                                    \n                                                               \n                                            \n                                                \n                                                               \n                                    \n                                                 \n                                       \n                                                                        \n                                                    \n                                       \n                                         \n                                          \n                                            \n                                             \n                                                           \n                                             \n                                                        \n                                                       \n                                                               \n                                              \n \nconst NativeReactNativeFeatureFlags        = TurboModuleRegistry.get      ('NativeReactNativeFeatureFlagsCxx');\nexport default NativeReactNativeFeatureFlags;","                                                                               \nimport * as TurboModuleRegistry from '../../../../Libraries/TurboModule/TurboModuleRegistry';\n                                           \n                                                                                                                        \n                                                                                                                          \n                                                                                                                                \n                                                                                                                                \n                                                                                                                                                      \n                                                                                                                                            \n                                                                                                                             \n                                                             \n                          \n                     \n                      \n                     \n                          \n                               \n                                    \n                                   \n                                  \n                                       \n                                            \n                                                 \n              \n                                                     \n                                                            \n                                                                          \n                   \n             \n \nexport default (TurboModuleRegistry.get      ('AccessibilityManager')       );","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n *       strict-local\n */\n\nimport NativeAccessibilityManager from './NativeAccessibilityManager';\n\n/**\n * This is a function exposed to the React Renderer that can be used by the\n * pre-Fabric renderer to emit accessibility events to pre-Fabric nodes.\n */\nfunction legacySendAccessibilityEvent(\n  reactTag        ,\n  eventType        ,\n)       {\n  if (eventType === 'focus' && NativeAccessibilityManager) {\n    NativeAccessibilityManager.setAccessibilityFocus(reactTag);\n  }\n}\n\nmodule.exports = legacySendAccessibilityEvent;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *       strict-local\n * @format\n */\n\n                                                                             \n\nimport {ConditionallyIgnoredEventHandlers} from '../../NativeComponent/ViewConfigIgnore';\n\n                                          \n                    \n                            \n  \n\nconst RCTTextInputViewConfig = {\n  bubblingEventTypes: {\n    topBlur: {\n      phasedRegistrationNames: {\n        bubbled: 'onBlur',\n        captured: 'onBlurCapture',\n      },\n    },\n    topChange: {\n      phasedRegistrationNames: {\n        bubbled: 'onChange',\n        captured: 'onChangeCapture',\n      },\n    },\n    topEndEditing: {\n      phasedRegistrationNames: {\n        bubbled: 'onEndEditing',\n        captured: 'onEndEditingCapture',\n      },\n    },\n    topFocus: {\n      phasedRegistrationNames: {\n        bubbled: 'onFocus',\n        captured: 'onFocusCapture',\n      },\n    },\n    topKeyPress: {\n      phasedRegistrationNames: {\n        bubbled: 'onKeyPress',\n        captured: 'onKeyPressCapture',\n      },\n    },\n    topSubmitEditing: {\n      phasedRegistrationNames: {\n        bubbled: 'onSubmitEditing',\n        captured: 'onSubmitEditingCapture',\n      },\n    },\n    topTouchCancel: {\n      phasedRegistrationNames: {\n        bubbled: 'onTouchCancel',\n        captured: 'onTouchCancelCapture',\n      },\n    },\n    topTouchEnd: {\n      phasedRegistrationNames: {\n        bubbled: 'onTouchEnd',\n        captured: 'onTouchEndCapture',\n      },\n    },\n\n    topTouchMove: {\n      phasedRegistrationNames: {\n        bubbled: 'onTouchMove',\n        captured: 'onTouchMoveCapture',\n      },\n    },\n  },\n  directEventTypes: {\n    topScroll: {\n      registrationName: 'onScroll',\n    },\n    topSelectionChange: {\n      registrationName: 'onSelectionChange',\n    },\n    topContentSizeChange: {\n      registrationName: 'onContentSizeChange',\n    },\n  },\n  validAttributes: {\n    fontSize: true,\n    fontWeight: true,\n    fontVariant: true,\n    // flowlint-next-line untyped-import:off\n    textShadowOffset: {diff: require('../../Utilities/differ/sizesDiffer')},\n    allowFontScaling: true,\n    fontStyle: true,\n    textTransform: true,\n    textAlign: true,\n    fontFamily: true,\n    lineHeight: true,\n    isHighlighted: true,\n    writingDirection: true,\n    textDecorationLine: true,\n    textShadowRadius: true,\n    letterSpacing: true,\n    textDecorationStyle: true,\n    textDecorationColor: {\n      process: require('../../StyleSheet/processColor').default,\n    },\n    color: {process: require('../../StyleSheet/processColor').default},\n    maxFontSizeMultiplier: true,\n    textShadowColor: {\n      process: require('../../StyleSheet/processColor').default,\n    },\n    editable: true,\n    inputAccessoryViewID: true,\n    caretHidden: true,\n    enablesReturnKeyAutomatically: true,\n    placeholderTextColor: {\n      process: require('../../StyleSheet/processColor').default,\n    },\n    clearButtonMode: true,\n    keyboardType: true,\n    selection: true,\n    returnKeyType: true,\n    submitBehavior: true,\n    mostRecentEventCount: true,\n    scrollEnabled: true,\n    selectionColor: {process: require('../../StyleSheet/processColor').default},\n    contextMenuHidden: true,\n    secureTextEntry: true,\n    placeholder: true,\n    autoCorrect: true,\n    multiline: true,\n    textContentType: true,\n    maxLength: true,\n    autoCapitalize: true,\n    keyboardAppearance: true,\n    passwordRules: true,\n    spellCheck: true,\n    selectTextOnFocus: true,\n    text: true,\n    clearTextOnFocus: true,\n    showSoftInputOnFocus: true,\n    autoFocus: true,\n    lineBreakStrategyIOS: true,\n    smartInsertDelete: true,\n    ...ConditionallyIgnoredEventHandlers({\n      onChange: true,\n      onSelectionChange: true,\n      onContentSizeChange: true,\n      onScroll: true,\n    }),\n  },\n};\n\nmodule.exports = (RCTTextInputViewConfig                              );\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n *       strict-local\n */\n\n// This class is responsible for coordinating the \"focused\" state for\n// TextInputs. All calls relating to the keyboard should be funneled\n// through here.\n\n             \n                \n                                   \n                                 \n                           \n                                               \n\nimport {Commands as AndroidTextInputCommands} from '../../Components/TextInput/AndroidTextInputNativeComponent';\nimport {Commands as iOSTextInputCommands} from '../../Components/TextInput/RCTSingelineTextInputNativeComponent';\n\nconst {findNodeHandle} = require('../../ReactNative/RendererProxy');\nconst Platform = require('../../Utilities/Platform');\nconst React = require('react');\n                                                           \n\nlet currentlyFocusedInputRef                = null;\nconst inputs = new Set  \n               \n                \n                                                    \n                                                                    \n                \n                                                                          \n                                              \n                        \n          \n                                           \n  ();\n\nfunction currentlyFocusedInput()                {\n  return currentlyFocusedInputRef;\n}\n\n/**\n * Returns the ID of the currently focused text field, if one exists\n * If no text field is focused it returns null\n */\nfunction currentlyFocusedField()          {\n  if (__DEV__) {\n    console.error(\n      'currentlyFocusedField is deprecated and will be removed in a future release. Use currentlyFocusedInput',\n    );\n  }\n\n  return findNodeHandle(currentlyFocusedInputRef);\n}\n\nfunction focusInput(textField               )       {\n  if (currentlyFocusedInputRef !== textField && textField != null) {\n    currentlyFocusedInputRef = textField;\n  }\n}\n\nfunction blurInput(textField               )       {\n  if (currentlyFocusedInputRef === textField && textField != null) {\n    currentlyFocusedInputRef = null;\n  }\n}\n\nfunction focusField(textFieldID         )       {\n  if (__DEV__) {\n    console.error('focusField no longer works. Use focusInput');\n  }\n\n  return;\n}\n\nfunction blurField(textFieldID         ) {\n  if (__DEV__) {\n    console.error('blurField no longer works. Use blurInput');\n  }\n\n  return;\n}\n\n/**\n * @param {number} TextInputID id of the text field to focus\n * Focuses the specified text field\n * noop if the text field was already focused or if the field is not editable\n */\nfunction focusTextInput(textField               ) {\n  if (typeof textField === 'number') {\n    if (__DEV__) {\n      console.error(\n        'focusTextInput must be called with a host component. Passing a react tag is deprecated.',\n      );\n    }\n\n    return;\n  }\n\n  if (textField != null) {\n    const fieldCanBeFocused =\n      currentlyFocusedInputRef !== textField &&\n      // $FlowFixMe - `currentProps` is missing in `NativeMethods`\n      textField.currentProps?.editable !== false;\n\n    if (!fieldCanBeFocused) {\n      return;\n    }\n    focusInput(textField);\n    if (Platform.OS === 'ios') {\n      // This isn't necessarily a single line text input\n      // But commands don't actually care as long as the thing being passed in\n      // actually has a command with that name. So this should work with single\n      // and multiline text inputs. Ideally we'll merge them into one component\n      // in the future.\n      iOSTextInputCommands.focus(textField);\n    } else if (Platform.OS === 'android') {\n      AndroidTextInputCommands.focus(textField);\n    }\n  }\n}\n\n/**\n * @param {number} textFieldID id of the text field to unfocus\n * Unfocuses the specified text field\n * noop if it wasn't focused\n */\nfunction blurTextInput(textField               ) {\n  if (typeof textField === 'number') {\n    if (__DEV__) {\n      console.error(\n        'blurTextInput must be called with a host component. Passing a react tag is deprecated.',\n      );\n    }\n\n    return;\n  }\n\n  if (currentlyFocusedInputRef === textField && textField != null) {\n    blurInput(textField);\n    if (Platform.OS === 'ios') {\n      // This isn't necessarily a single line text input\n      // But commands don't actually care as long as the thing being passed in\n      // actually has a command with that name. So this should work with single\n      // and multiline text inputs. Ideally we'll merge them into one component\n      // in the future.\n      iOSTextInputCommands.blur(textField);\n    } else if (Platform.OS === 'android') {\n      AndroidTextInputCommands.blur(textField);\n    }\n  }\n}\n\nfunction registerInput(textField              ) {\n  if (typeof textField === 'number') {\n    if (__DEV__) {\n      console.error(\n        'registerInput must be called with a host component. Passing a react tag is deprecated.',\n      );\n    }\n\n    return;\n  }\n\n  inputs.add(textField);\n}\n\nfunction unregisterInput(textField              ) {\n  if (typeof textField === 'number') {\n    if (__DEV__) {\n      console.error(\n        'unregisterInput must be called with a host component. Passing a react tag is deprecated.',\n      );\n    }\n\n    return;\n  }\n  inputs.delete(textField);\n}\n\nfunction isTextInput(textField              )          {\n  if (typeof textField === 'number') {\n    if (__DEV__) {\n      console.error(\n        'isTextInput must be called with a host component. Passing a react tag is deprecated.',\n      );\n    }\n\n    return false;\n  }\n\n  return inputs.has(textField);\n}\n\nmodule.exports = {\n  currentlyFocusedInput,\n  focusInput,\n  blurInput,\n\n  currentlyFocusedField,\n  focusField,\n  blurField,\n  focusTextInput,\n  blurTextInput,\n  registerInput,\n  unregisterInput,\n  isTextInput,\n};\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *       strict-local\n * @format\n */\n\n'use strict';\n\n                                                                \n                                                                     \n\nfunction flattenStyle                                           (\n  style             ,\n  // $FlowFixMe[underconstrained-implicit-instantiation]\n)                                             {\n  if (style === null || typeof style !== 'object') {\n    return undefined;\n  }\n\n  if (!Array.isArray(style)) {\n    // $FlowFixMe[incompatible-return]\n    return style;\n  }\n\n  const result                         = {};\n  for (let i = 0, styleLength = style.length; i < styleLength; ++i) {\n    // $FlowFixMe[underconstrained-implicit-instantiation]\n    const computedStyle = flattenStyle(style[i]);\n    if (computedStyle) {\n      // $FlowFixMe[invalid-in-rhs]\n      for (const key in computedStyle) {\n        // $FlowFixMe[incompatible-use]\n        // $FlowFixMe[invalid-computed-prop]\n        result[key] = computedStyle[key];\n      }\n    }\n  }\n  // $FlowFixMe[incompatible-return]\n  return result;\n}\n\nmodule.exports = flattenStyle;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n *      \n */\n\nconst {dispatchCommand} = require('../ReactNative/RendererProxy');\n\n                                       \n                                       \n    \n\nfunction codegenNativeCommands                 (options                   )    {\n  const commandObj                                                   = {};\n\n  options.supportedCommands.forEach(command => {\n    // $FlowFixMe[missing-local-annot]\n    commandObj[command] = (ref, ...args) => {\n      // $FlowFixMe[incompatible-call]\n      dispatchCommand(ref, command, args);\n    };\n  });\n\n  return ((commandObj     )   );\n}\n\nexport default codegenNativeCommands;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n *      \n */\n\n'use strict';\n\nlet logListeners;\n\n                      \n                                                                             \n   \n\n                                                      \n\nfunction unstable_setLogListeners(listeners               ) {\n  logListeners = listeners;\n}\n\n/*\n * @returns {bool} true if different, false if equal\n */\nconst deepDiffer = function (\n  one     ,\n  two     ,\n  maxDepthOrOptions                   = -1,\n  maybeOptions          ,\n)          {\n  const options =\n    typeof maxDepthOrOptions === 'number' ? maybeOptions : maxDepthOrOptions;\n  const maxDepth =\n    typeof maxDepthOrOptions === 'number' ? maxDepthOrOptions : -1;\n  if (maxDepth === 0) {\n    return true;\n  }\n  if (one === two) {\n    // Short circuit on identical object references instead of traversing them.\n    return false;\n  }\n  if (typeof one === 'function' && typeof two === 'function') {\n    // We consider all functions equal unless explicitly configured otherwise\n    let unsafelyIgnoreFunctions = options?.unsafelyIgnoreFunctions;\n    if (unsafelyIgnoreFunctions == null) {\n      if (\n        logListeners &&\n        logListeners.onDifferentFunctionsIgnored &&\n        (!options || !('unsafelyIgnoreFunctions' in options))\n      ) {\n        logListeners.onDifferentFunctionsIgnored(one.name, two.name);\n      }\n      unsafelyIgnoreFunctions = true;\n    }\n    return !unsafelyIgnoreFunctions;\n  }\n  if (typeof one !== 'object' || one === null) {\n    // Primitives can be directly compared\n    return one !== two;\n  }\n  if (typeof two !== 'object' || two === null) {\n    // We know they are different because the previous case would have triggered\n    // otherwise.\n    return true;\n  }\n  if (one.constructor !== two.constructor) {\n    return true;\n  }\n  if (Array.isArray(one)) {\n    // We know two is also an array because the constructors are equal\n    const len = one.length;\n    if (two.length !== len) {\n      return true;\n    }\n    for (let ii = 0; ii < len; ii++) {\n      if (deepDiffer(one[ii], two[ii], maxDepth - 1, options)) {\n        return true;\n      }\n    }\n  } else {\n    for (const key in one) {\n      if (deepDiffer(one[key], two[key], maxDepth - 1, options)) {\n        return true;\n      }\n    }\n    for (const twoKey in two) {\n      // The only case we haven't checked yet is keys that are in two but aren't\n      // in one, which means they are different.\n      if (one[twoKey] === undefined && two[twoKey] !== undefined) {\n        return true;\n      }\n    }\n  }\n  return false;\n};\n\ndeepDiffer.unstable_setLogListeners = unstable_setLogListeners;\nmodule.exports = deepDiffer;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @generated SignedSource<<870e25c844e692bb04ee49fe20cd3baf>>\n *       strict-local\n */\n\n/**\n * IMPORTANT: Do NOT modify this file directly.\n *\n * To change the definition of the flags, edit\n *   packages/react-native/scripts/featureflags/ReactNativeFeatureFlags.config.js.\n *\n * To regenerate this code, run the following script from the repo root:\n *   yarn featureflags-update\n */\n\nimport {\n              \n  createJavaScriptFlagGetter,\n  createNativeFlagGetter,\n  setOverrides,\n} from './ReactNativeFeatureFlagsBase';\n\n                                             \n                                  \n                                                    \n                                             \n                                                  \n                                            \n                                                       \n                                                                \n                                                   \n  \n\n                                                                                            \n\n                                       \n                                   \n                                  \n                                            \n                                                                      \n                                                    \n                                                               \n                                            \n                                                \n                                                               \n                                    \n                                                 \n                                       \n                                                                        \n                                                    \n                                       \n                                         \n                                          \n                                            \n                                             \n                                                           \n                                             \n                                                        \n                                                       \n                                                               \n                                              \n \n\n/**\n * JS-only flag for testing. Do NOT modify.\n */\nexport const jsOnlyTestFlag                  = createJavaScriptFlagGetter('jsOnlyTestFlag', false);\n\n/**\n * Enables an experimental flush-queue debouncing in Animated.js.\n */\nexport const animatedShouldDebounceQueueFlush                  = createJavaScriptFlagGetter('animatedShouldDebounceQueueFlush', false);\n\n/**\n * Enables an experimental mega-operation for Animated.js that replaces many calls to native with a single call into native, to reduce JSI/JNI traffic.\n */\nexport const animatedShouldUseSingleOp                  = createJavaScriptFlagGetter('animatedShouldUseSingleOp', false);\n\n/**\n * Enables access to the host tree in Fabric using DOM-compatible APIs.\n */\nexport const enableAccessToHostTreeInFabric                  = createJavaScriptFlagGetter('enableAccessToHostTreeInFabric', false);\n\n/**\n * Function used to enable / disabled Layout Animations in React Native.\n */\nexport const isLayoutAnimationEnabled                  = createJavaScriptFlagGetter('isLayoutAnimationEnabled', true);\n\n/**\n * Enables use of AnimatedObject for animating transform values.\n */\nexport const shouldUseAnimatedObjectForTransform                  = createJavaScriptFlagGetter('shouldUseAnimatedObjectForTransform', false);\n\n/**\n * removeClippedSubviews prop will be used as the default in FlatList on iOS to match Android\n */\nexport const shouldUseRemoveClippedSubviewsAsDefaultOnIOS                  = createJavaScriptFlagGetter('shouldUseRemoveClippedSubviewsAsDefaultOnIOS', false);\n\n/**\n * Enables use of setNativeProps in JS driven animations.\n */\nexport const shouldUseSetNativePropsInFabric                  = createJavaScriptFlagGetter('shouldUseSetNativePropsInFabric', true);\n\n/**\n * Common flag for testing. Do NOT modify.\n */\nexport const commonTestFlag                  = createNativeFlagGetter('commonTestFlag', false);\n/**\n * Enables the differentiator to understand the \"collapsableChildren\" prop\n */\nexport const allowCollapsableChildren                  = createNativeFlagGetter('allowCollapsableChildren', true);\n/**\n * Adds support for recursively processing commits that mount synchronously (Android only).\n */\nexport const allowRecursiveCommitsWithSynchronousMountOnAndroid                  = createNativeFlagGetter('allowRecursiveCommitsWithSynchronousMountOnAndroid', false);\n/**\n * When enabled, the RuntimeScheduler processing the event loop will batch all rendering updates and dispatch them together at the end of each iteration of the loop.\n */\nexport const batchRenderingUpdatesInEventLoop                  = createNativeFlagGetter('batchRenderingUpdatesInEventLoop', false);\n/**\n * When enabled, ReactInstanceManager will clean up Fabric surfaces on destroy().\n */\nexport const destroyFabricSurfacesInReactInstanceManager                  = createNativeFlagGetter('destroyFabricSurfacesInReactInstanceManager', false);\n/**\n * Enables the use of a background executor to compute layout and commit updates on Fabric (this system is deprecated and should not be used).\n */\nexport const enableBackgroundExecutor                  = createNativeFlagGetter('enableBackgroundExecutor', false);\n/**\n * Clean yoga node when <TextInput /> does not change.\n */\nexport const enableCleanTextInputYogaNode                  = createNativeFlagGetter('enableCleanTextInputYogaNode', false);\n/**\n * When enabled, the renderer would only fail commits when they propagate state and the last commit that updated state changed before committing.\n */\nexport const enableGranularShadowTreeStateReconciliation                  = createNativeFlagGetter('enableGranularShadowTreeStateReconciliation', false);\n/**\n * Enables the use of microtasks in Hermes (scheduling) and RuntimeScheduler (execution).\n */\nexport const enableMicrotasks                  = createNativeFlagGetter('enableMicrotasks', false);\n/**\n * Dispatches state updates synchronously in Fabric (e.g.: updates the scroll position in the shadow tree synchronously from the main thread).\n */\nexport const enableSynchronousStateUpdates                  = createNativeFlagGetter('enableSynchronousStateUpdates', false);\n/**\n * Ensures that JavaScript always has a consistent view of the state of the UI (e.g.: commits done in other threads are not immediately propagated to JS during its execution).\n */\nexport const enableUIConsistency                  = createNativeFlagGetter('enableUIConsistency', false);\n/**\n * Fixes a leak in SurfaceMountingManager.mRemoveDeleteTreeUIFrameCallback\n */\nexport const fixStoppedSurfaceRemoveDeleteTreeUIFrameCallbackLeak                  = createNativeFlagGetter('fixStoppedSurfaceRemoveDeleteTreeUIFrameCallbackLeak', false);\n/**\n * Forces the mounting layer on Android to always batch mount items instead of dispatching them immediately. This might fix some crashes related to synchronous state updates, where some views dispatch state updates during mount.\n */\nexport const forceBatchingMountItemsOnAndroid                  = createNativeFlagGetter('forceBatchingMountItemsOnAndroid', false);\n/**\n * Flag determining if the React Native DevTools (Fusebox) CDP backend should be enabled in debug builds. This flag is global and should not be changed across React Host lifetimes.\n */\nexport const fuseboxEnabledDebug                  = createNativeFlagGetter('fuseboxEnabledDebug', false);\n/**\n * Flag determining if the React Native DevTools (Fusebox) CDP backend should be enabled in release builds. This flag is global and should not be changed across React Host lifetimes.\n */\nexport const fuseboxEnabledRelease                  = createNativeFlagGetter('fuseboxEnabledRelease', false);\n/**\n * Only enqueue Choreographer calls if there is an ongoing animation, instead of enqueueing every frame.\n */\nexport const lazyAnimationCallbacks                  = createNativeFlagGetter('lazyAnimationCallbacks', false);\n/**\n * When enabled, ParagraphShadowNode will no longer call measure twice.\n */\nexport const preventDoubleTextMeasure                  = createNativeFlagGetter('preventDoubleTextMeasure', true);\n/**\n * Propagate layout direction to Android views.\n */\nexport const setAndroidLayoutDirection                  = createNativeFlagGetter('setAndroidLayoutDirection', false);\n/**\n * Invoke callbacks immediately on the ReactInstance rather than going through a background thread for synchronization\n */\nexport const useImmediateExecutorInAndroidBridgeless                  = createNativeFlagGetter('useImmediateExecutorInAndroidBridgeless', false);\n/**\n * When enabled, it uses the modern fork of RuntimeScheduler that allows scheduling tasks with priorities from any thread.\n */\nexport const useModernRuntimeScheduler                  = createNativeFlagGetter('useModernRuntimeScheduler', false);\n/**\n * When enabled, the native view configs are used in bridgeless mode.\n */\nexport const useNativeViewConfigsInBridgelessMode                  = createNativeFlagGetter('useNativeViewConfigsInBridgelessMode', false);\n/**\n * When enabled, cloning shadow nodes within react native will update the reference held by the current JS fiber tree.\n */\nexport const useRuntimeShadowNodeReferenceUpdate                  = createNativeFlagGetter('useRuntimeShadowNodeReferenceUpdate', false);\n/**\n * When enabled, cloning shadow nodes during layout will update the reference held by the current JS fiber tree.\n */\nexport const useRuntimeShadowNodeReferenceUpdateOnLayout                  = createNativeFlagGetter('useRuntimeShadowNodeReferenceUpdateOnLayout', false);\n/**\n * When enabled, it uses optimised state reconciliation algorithm.\n */\nexport const useStateAlignmentMechanism                  = createNativeFlagGetter('useStateAlignmentMechanism', false);\n\n/**\n * Overrides the feature flags with the provided methods.\n * NOTE: Only JS-only flags can be overridden from JavaScript using this API.\n */\nexport const override = setOverrides;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *       strict-local\n * @format\n */\n\n             \n                                \n                                         \n                                   \n\nimport NativeReactNativeFeatureFlags from './specs/NativeReactNativeFeatureFlags';\n\nconst accessedFeatureFlags              = new Set();\nlet overrides                                         ;\n\n                                \n\nfunction createGetter                              (\n  configName        ,\n  customValueGetter            ,\n  defaultValue   ,\n)            {\n  let cachedValue    ;\n\n  return () => {\n    if (cachedValue == null) {\n      cachedValue = customValueGetter() ?? defaultValue;\n    }\n    return cachedValue;\n  };\n}\n\nexport function createJavaScriptFlagGetter \n                                          \n (\n  configName   ,\n  defaultValue                                              ,\n)                                                       {\n  return createGetter(\n    configName,\n    () => {\n      accessedFeatureFlags.add(configName);\n      return overrides?.[configName]?.();\n    },\n    defaultValue,\n  );\n}\n\n                                                                              \n\nexport function createNativeFlagGetter                              (\n  configName   ,\n  defaultValue                                                  ,\n)                                                           {\n  return createGetter(\n    configName,\n    () => {\n      const valueFromNative = NativeReactNativeFeatureFlags?.[configName]?.();\n      if (valueFromNative == null) {\n        logUnavailableNativeModuleError(configName);\n      }\n      return valueFromNative;\n    },\n    defaultValue,\n  );\n}\n\nexport function getOverrides()                                          {\n  return overrides;\n}\n\nexport function setOverrides(\n  newOverrides                                        ,\n)       {\n  if (overrides != null) {\n    throw new Error('Feature flags cannot be overridden more than once');\n  }\n\n  if (accessedFeatureFlags.size > 0) {\n    const accessedFeatureFlagsStr = Array.from(accessedFeatureFlags).join(', ');\n    throw new Error(\n      `Feature flags were accessed before being overridden: ${accessedFeatureFlagsStr}`,\n    );\n  }\n\n  overrides = newOverrides;\n}\n\nconst reportedConfigNames              = new Set();\n\nfunction logUnavailableNativeModuleError(configName        )       {\n  if (!reportedConfigNames.has(configName)) {\n    reportedConfigNames.add(configName);\n    console.error(\n      `Could not access feature flag '${configName}' because native module method was not available`,\n    );\n  }\n}\n"],"names":["_default","_NativeAccessibilityManager","Commands","__INTERNAL_VIEW_CONFIG","_codegenNativeCommands","require","AndroidTextInputNativeComponent","_NativeComponentRegistry","_RCTTextInputViewConfig","SinglelineTextInputNativeComponent","NativeReactNativeFeatureFlags","_TurboModuleRegistry","legacySendAccessibilityEvent","reactTag","eventType","module","RCTTextInputViewConfig","_ViewConfigIgnore","findNodeHandle","Platform","React","currentlyFocusedInputRef","inputs","Set","currentlyFocusedInput","currentlyFocusedField","__DEV__","console","focusInput","textField","blurInput","focusField","textFieldID","blurField","focusTextInput","_textField_currentProps","fieldCanBeFocused","_RCTSingelineTextInputNativeComponent","_AndroidTextInputNativeComponent","blurTextInput","registerInput","unregisterInput","isTextInput","flattenStyle","style","undefined","Array","result","i","styleLength","computedStyle","key","dispatchCommand","codegenNativeCommands","options","commandObj","command","ref","args","logListeners","unstable_setLogListeners","listeners","deepDiffer","one","two","maybeOptions","maxDepthOrOptions","maxDepth","unsafelyIgnoreFunctions","len","ii","twoKey","allowCollapsableChildren","allowRecursiveCommitsWithSynchronousMountOnAndroid","animatedShouldDebounceQueueFlush","animatedShouldUseSingleOp","batchRenderingUpdatesInEventLoop","commonTestFlag","destroyFabricSurfacesInReactInstanceManager","enableAccessToHostTreeInFabric","enableBackgroundExecutor","enableCleanTextInputYogaNode","enableGranularShadowTreeStateReconciliation","enableMicrotasks","enableSynchronousStateUpdates","enableUIConsistency","fixStoppedSurfaceRemoveDeleteTreeUIFrameCallbackLeak","forceBatchingMountItemsOnAndroid","fuseboxEnabledDebug","fuseboxEnabledRelease","isLayoutAnimationEnabled","jsOnlyTestFlag","lazyAnimationCallbacks","override","preventDoubleTextMeasure","setAndroidLayoutDirection","shouldUseAnimatedObjectForTransform","shouldUseRemoveClippedSubviewsAsDefaultOnIOS","shouldUseSetNativePropsInFabric","useImmediateExecutorInAndroidBridgeless","useModernRuntimeScheduler","useNativeViewConfigsInBridgelessMode","useRuntimeShadowNodeReferenceUpdate","useRuntimeShadowNodeReferenceUpdateOnLayout","useStateAlignmentMechanism","_ReactNativeFeatureFlagsBase","createJavaScriptFlagGetter","createNativeFlagGetter","getOverrides","setOverrides","accessedFeatureFlags","overrides","createGetter","configName","customValueGetter","defaultValue","cachedValue","_NativeReactNativeFeatureFlags","valueFromNative","logUnavailableNativeModuleError","newOverrides","Error","accessedFeatureFlagsStr","reportedConfigNames"],"mappings":"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"}