(self["webpackChunksas_miniappdemo"] = self["webpackChunksas_miniappdemo"] || []).push([["vendors-node_modules_react-native_Libraries_ReactPrivate_ReactNativePrivateInterface_js"], {
70702: (function (__unused_webpack_module, exports, __webpack_require__) {
Object.defineProperty(exports, "__esModule", ({
    value: true
}));
Object.defineProperty(exports, "default", ({
    enumerable: true,
    get: function() {
        return _default;
    }
}));
var _interop_require_default = __webpack_require__(92766);
var _interop_require_wildcard = __webpack_require__(97427);
var _TurboModuleRegistry = /*#__PURE__*/ _interop_require_wildcard._(__webpack_require__(43783));
var _nullthrows = /*#__PURE__*/ _interop_require_default._(__webpack_require__(43588));
var RawNativeDOM = _TurboModuleRegistry.get('NativeDOMCxx');
var NativeDOM = {
    getParentNode (shadowNode) {
        return (0, _nullthrows.default)(RawNativeDOM).getParentNode(shadowNode);
    },
    getChildNodes (shadowNode) {
        return (0, _nullthrows.default)(RawNativeDOM).getChildNodes(shadowNode);
    },
    isConnected (shadowNode) {
        return (0, _nullthrows.default)(RawNativeDOM).isConnected(shadowNode);
    },
    compareDocumentPosition (shadowNode, otherShadowNode) {
        return (0, _nullthrows.default)(RawNativeDOM).compareDocumentPosition(shadowNode, otherShadowNode);
    },
    getTextContent (shadowNode) {
        return (0, _nullthrows.default)(RawNativeDOM).getTextContent(shadowNode);
    },
    getBoundingClientRect (shadowNode, includeTransform) {
        return (0, _nullthrows.default)(RawNativeDOM).getBoundingClientRect(shadowNode, includeTransform);
    },
    getOffset (shadowNode) {
        return (0, _nullthrows.default)(RawNativeDOM).getOffset(shadowNode);
    },
    getScrollPosition (shadowNode) {
        return (0, _nullthrows.default)(RawNativeDOM).getScrollPosition(shadowNode);
    },
    getScrollSize (shadowNode) {
        return (0, _nullthrows.default)(RawNativeDOM).getScrollSize(shadowNode);
    },
    getInnerSize (shadowNode) {
        return (0, _nullthrows.default)(RawNativeDOM).getInnerSize(shadowNode);
    },
    getBorderWidth (shadowNode) {
        return (0, _nullthrows.default)(RawNativeDOM).getBorderWidth(shadowNode);
    },
    getTagName (shadowNode) {
        return (0, _nullthrows.default)(RawNativeDOM).getTagName(shadowNode);
    },
    hasPointerCapture (shadowNode, pointerId) {
        return (0, _nullthrows.default)(RawNativeDOM).hasPointerCapture(shadowNode, pointerId);
    },
    setPointerCapture (shadowNode, pointerId) {
        return (0, _nullthrows.default)(RawNativeDOM).setPointerCapture(shadowNode, pointerId);
    },
    releasePointerCapture (shadowNode, pointerId) {
        return (0, _nullthrows.default)(RawNativeDOM).releasePointerCapture(shadowNode, pointerId);
    },
    measure (shadowNode, callback) {
        return (0, _nullthrows.default)(RawNativeDOM).measure(shadowNode, callback);
    },
    measureInWindow (shadowNode, callback) {
        return (0, _nullthrows.default)(RawNativeDOM).measureInWindow(shadowNode, callback);
    },
    measureLayout (shadowNode, relativeNode, onFail, onSuccess) {
        return (0, _nullthrows.default)(RawNativeDOM).measureLayout(shadowNode, relativeNode, onFail, onSuccess);
    }
};
var _default = NativeDOM;


}),
79356: (function (__unused_webpack_module, exports, __webpack_require__) {
var __webpack_unused_export__;
/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 *       strict-local
 * @format
 */ __webpack_unused_export__ = ({
    value: true
});
Object.defineProperty(exports, "default", ({
    enumerable: true,
    get: function() {
        return _default;
    }
}));
var _interop_require_default = __webpack_require__(92766);
var _EventEmitter = /*#__PURE__*/ _interop_require_default._(__webpack_require__(43670));
var RawEventEmitter = new _EventEmitter.default();
var _default = RawEventEmitter;


}),
16324: (function (__unused_webpack_module, exports, __webpack_require__) {
var __webpack_unused_export__;
/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * @format
 *       strict-local
 */ __webpack_unused_export__ = ({
    value: true
});
Object.defineProperty(exports, "default", ({
    enumerable: true,
    get: function() {
        return _default;
    }
}));
var _ExceptionsManager = __webpack_require__(45439);
var ReactFiberErrorDialog = {
    /**
   * Intercept lifecycle errors and ensure they are shown with the correct stack
   * trace within the native redbox component.
   */ showErrorDialog (ref) {
        var componentStack = ref.componentStack, errorValue = ref.error;
        var error;
        // Typically, `errorValue` should be an error. However, other values such as
        // strings (or even null) are sometimes thrown.
        if (errorValue instanceof Error) {
            /* $FlowFixMe[class-object-subtyping] added when improving typing for
       * this parameters */ error = errorValue;
        } else if (typeof errorValue === 'string') {
            /* $FlowFixMe[class-object-subtyping] added when improving typing for
       * this parameters */ error = new _ExceptionsManager.SyntheticError(errorValue);
        } else {
            /* $FlowFixMe[class-object-subtyping] added when improving typing for
       * this parameters */ error = new _ExceptionsManager.SyntheticError('Unspecified error');
        }
        try {
            error.componentStack = componentStack;
            error.isComponentError = true;
        } catch  {
        // Ignored.
        }
        (0, _ExceptionsManager.handleException)(error, false);
        // Return false here to prevent ReactFiberErrorLogger default behavior of
        // logging error details to console.error. Calls to console.error are
        // automatically routed to the native redbox controller, which we've already
        // done above by calling ExceptionsManager.
        return false;
    }
};
var _default = ReactFiberErrorDialog;


}),
57868: (function (module, __unused_webpack_exports, __webpack_require__) {
"use strict";
/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * @format
 *      
 */ 
var BatchedBridge = __webpack_require__(61245);
var RCTEventEmitter = {
    register (eventEmitter) {
        if (__webpack_require__.g.RN$Bridgeless) {
            __webpack_require__.g.RN$registerCallableModule('RCTEventEmitter', ()=>eventEmitter);
        } else {
            BatchedBridge.registerCallableModule('RCTEventEmitter', eventEmitter);
        }
    }
};
module.exports = RCTEventEmitter;


}),
58442: (function (__unused_webpack_module, exports, __webpack_require__) {
var __webpack_unused_export__;
/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * @format
 *       strict-local
 */ // Make sure global Event is defined
__webpack_unused_export__ = ({
    value: true
});
Object.defineProperty(exports, "default", ({
    enumerable: true,
    get: function() {
        return _default;
    }
}));
var _call_super = __webpack_require__(54536);
var _class_call_check = __webpack_require__(83457);
var _inherits = __webpack_require__(80402);
var _interop_require_default = __webpack_require__(92766);
var _EventPolyfill = /*#__PURE__*/ _interop_require_default._(__webpack_require__(68003));
var CustomEvent = /*#__PURE__*/ function(EventPolyfill) {
    "use strict";
    _inherits._(CustomEvent, EventPolyfill);
    function CustomEvent(typeArg, options) {
        _class_call_check._(this, CustomEvent);
        var _this;
        var bubbles = options.bubbles, cancelable = options.cancelable, composed = options.composed;
        _this = _call_super._(this, CustomEvent, [
            typeArg,
            {
                bubbles,
                cancelable,
                composed
            }
        ]);
        _this.detail = options.detail; // this would correspond to `NativeEvent` in SyntheticEvent
        return _this;
    }
    return CustomEvent;
}(_EventPolyfill.default);
var _default = CustomEvent;


}),
68003: (function (__unused_webpack_module, exports, __webpack_require__) {
/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * @format
 *       strict-local
 */ // https://dom.spec.whatwg.org/#dictdef-eventinit
/**
 * This is a copy of the Event interface defined in Flow:
 * https://github.com/facebook/flow/blob/741104e69c43057ebd32804dd6bcc1b5e97548ea/lib/dom.js
 * which is itself a faithful interface of the W3 spec:
 * https://dom.spec.whatwg.org/#interface-event
 *
 * Since Flow assumes that Event is provided and is on the global object,
 * we must provide an implementation of Event for CustomEvent (and future
 * alignment of React Native's event system with the W3 spec).
 */ Object.defineProperty(exports, "__esModule", ({
    value: true
}));
Object.defineProperty(exports, "default", ({
    enumerable: true,
    get: function() {
        return _default;
    }
}));
var _class_call_check = __webpack_require__(83457);
var _create_class = __webpack_require__(10994);
var EventPolyfill = /*#__PURE__*/ function() {
    "use strict";
    function EventPolyfill(type, eventInitDict) {
        _class_call_check._(this, EventPolyfill);
        this.type = type;
        this.bubbles = !!((eventInitDict === null || eventInitDict === void 0 ? void 0 : eventInitDict.bubbles) || false);
        this.cancelable = !!((eventInitDict === null || eventInitDict === void 0 ? void 0 : eventInitDict.cancelable) || false);
        this.composed = !!((eventInitDict === null || eventInitDict === void 0 ? void 0 : eventInitDict.composed) || false);
        this.scoped = !!((eventInitDict === null || eventInitDict === void 0 ? void 0 : eventInitDict.scoped) || false);
        // TODO: somehow guarantee that only "private" instantiations of Event
        // can set this to true
        this.isTrusted = false;
        // TODO: in the future we'll want to make sure this has the same
        // time-basis as events originating from native
        this.timeStamp = Date.now();
        this.defaultPrevented = false;
        // https://developer.mozilla.org/en-US/docs/Web/API/Event/eventPhase
        this.NONE = 0;
        this.AT_TARGET = 1;
        this.BUBBLING_PHASE = 2;
        this.CAPTURING_PHASE = 3;
        this.eventPhase = this.NONE;
        // $FlowFixMe
        this.currentTarget = null;
        // $FlowFixMe
        this.target = null;
        // $FlowFixMe
        this.srcElement = null;
    }
    _create_class._(EventPolyfill, [
        {
            key: "composedPath",
            value: function composedPath() {
                throw new Error('TODO: not yet implemented');
            }
        },
        {
            key: "preventDefault",
            value: function preventDefault() {
                this.defaultPrevented = true;
                if (this._syntheticEvent != null) {
                    // $FlowFixMe
                    this._syntheticEvent.preventDefault();
                }
            }
        },
        {
            key: "initEvent",
            value: function initEvent(type, bubbles, cancelable) {
                throw new Error('TODO: not yet implemented. This method is also deprecated.');
            }
        },
        {
            key: "stopImmediatePropagation",
            value: function stopImmediatePropagation() {
                throw new Error('TODO: not yet implemented');
            }
        },
        {
            key: "stopPropagation",
            value: function stopPropagation() {
                if (this._syntheticEvent != null) {
                    // $FlowFixMe
                    this._syntheticEvent.stopPropagation();
                }
            }
        },
        {
            key: "setSyntheticEvent",
            value: function setSyntheticEvent(value) {
                this._syntheticEvent = value;
            }
        }
    ]);
    return EventPolyfill;
}();
// Assertion magic for polyfill follows.
// eslint-disable-line no-unused-vars
/*::
// This can be a strict mode error at runtime so put it in a Flow comment.
(checkEvent: IEvent);
*/ __webpack_require__.g.Event = EventPolyfill;
var _default = EventPolyfill;


}),
95439: (function (__unused_webpack_module, exports, __webpack_require__) {
var __webpack_unused_export__;
/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * @format
 *       strict-local
 */ __webpack_unused_export__ = ({
    value: true
});
Object.defineProperty(exports, "default", ({
    enumerable: true,
    get: function() {
        return ReactFabricHostComponent;
    }
}));
var _class_call_check = __webpack_require__(83457);
var _create_class = __webpack_require__(10994);
var _interop_require_default = __webpack_require__(92766);
var _TextInputState = /*#__PURE__*/ _interop_require_default._(__webpack_require__(6426));
var _ReactFabric = __webpack_require__(37445);
var _FabricUIManager = __webpack_require__(26651);
var _ReactNativeAttributePayload = __webpack_require__(22861);
var _warnForStyleProps = /*#__PURE__*/ _interop_require_default._(__webpack_require__(44296));
var _nullthrows = /*#__PURE__*/ _interop_require_default._(__webpack_require__(43588));
var _nullthrows1 = (0, _nullthrows.default)((0, _FabricUIManager.getFabricUIManager)()), fabricMeasure = _nullthrows1.measure, fabricMeasureInWindow = _nullthrows1.measureInWindow, fabricMeasureLayout = _nullthrows1.measureLayout, fabricGetBoundingClientRect = _nullthrows1.getBoundingClientRect, setNativeProps = _nullthrows1.setNativeProps;
var noop = ()=>{};
var ReactFabricHostComponent = /*#__PURE__*/ function() {
    "use strict";
    function ReactFabricHostComponent(tag, viewConfig, internalInstanceHandle) {
        _class_call_check._(this, ReactFabricHostComponent);
        this.__nativeTag = tag;
        this._viewConfig = viewConfig;
        this.__internalInstanceHandle = internalInstanceHandle;
    }
    _create_class._(ReactFabricHostComponent, [
        {
            key: "blur",
            value: function blur() {
                // $FlowFixMe[incompatible-exact] Migrate all usages of `NativeMethods` to an interface to fix this.
                _TextInputState.default.blurTextInput(this);
            }
        },
        {
            key: "focus",
            value: function focus() {
                // $FlowFixMe[incompatible-exact] Migrate all usages of `NativeMethods` to an interface to fix this.
                _TextInputState.default.focusTextInput(this);
            }
        },
        {
            key: "measure",
            value: function measure(callback) {
                var node = (0, _ReactFabric.getNodeFromInternalInstanceHandle)(this.__internalInstanceHandle);
                if (node != null) {
                    fabricMeasure(node, callback);
                }
            }
        },
        {
            key: "measureInWindow",
            value: function measureInWindow(callback) {
                var node = (0, _ReactFabric.getNodeFromInternalInstanceHandle)(this.__internalInstanceHandle);
                if (node != null) {
                    fabricMeasureInWindow(node, callback);
                }
            }
        },
        {
            key: "measureLayout",
            value: function measureLayout(relativeToNativeNode, onSuccess, onFail /* currently unused */ ) {
                if (typeof relativeToNativeNode === 'number' || !(relativeToNativeNode instanceof ReactFabricHostComponent)) {
                    if (false) {}
                    return;
                }
                var toStateNode = (0, _ReactFabric.getNodeFromInternalInstanceHandle)(this.__internalInstanceHandle);
                var fromStateNode = (0, _ReactFabric.getNodeFromInternalInstanceHandle)(relativeToNativeNode.__internalInstanceHandle);
                if (toStateNode != null && fromStateNode != null) {
                    fabricMeasureLayout(toStateNode, fromStateNode, onFail != null ? onFail : noop, onSuccess != null ? onSuccess : noop);
                }
            }
        },
        {
            key: "unstable_getBoundingClientRect",
            value: function unstable_getBoundingClientRect() {
                var node = (0, _ReactFabric.getNodeFromInternalInstanceHandle)(this.__internalInstanceHandle);
                if (node != null) {
                    var rect = fabricGetBoundingClientRect(node, true);
                    if (rect) {
                        return new DOMRect(rect[0], rect[1], rect[2], rect[3]);
                    }
                }
                // Empty rect if any of the above failed
                return new DOMRect(0, 0, 0, 0);
            }
        },
        {
            key: "setNativeProps",
            value: function setNativeProps1(nativeProps) {
                if (false) {}
                var updatePayload = (0, _ReactNativeAttributePayload.create)(nativeProps, this._viewConfig.validAttributes);
                var node = (0, _ReactFabric.getNodeFromInternalInstanceHandle)(this.__internalInstanceHandle);
                if (node != null && updatePayload != null) {
                    setNativeProps(node, updatePayload);
                }
            }
        }
    ]);
    return ReactFabricHostComponent;
}();


}),
5030: (function (__unused_webpack_module, exports, __webpack_require__) {
/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * @format
 *       strict-local
 */ /**
 * This module is meant to be used by the React renderers to create public
 * instances and get some data from them (like their instance handle / fiber).
 */ Object.defineProperty(exports, "__esModule", ({
    value: true
}));
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: Object.getOwnPropertyDescriptor(all, name).get
    });
}
_export(exports, {
    get createPublicInstance () {
        return createPublicInstance;
    },
    get createPublicTextInstance () {
        return createPublicTextInstance;
    },
    get getInternalInstanceHandleFromPublicInstance () {
        return getInternalInstanceHandleFromPublicInstance;
    },
    get getNativeTagFromPublicInstance () {
        return getNativeTagFromPublicInstance;
    },
    get getNodeFromPublicInstance () {
        return getNodeFromPublicInstance;
    }
});
var _interop_require_wildcard = __webpack_require__(97427);
var _ReactNativeFeatureFlags = /*#__PURE__*/ _interop_require_wildcard._(__webpack_require__(24954));
// Lazy loaded to avoid evaluating the module when using the legacy renderer.
var PublicInstanceClass;
var ReadOnlyTextClass;
// Lazy loaded to avoid evaluating the module when using the legacy renderer.
var ReactFabric;
function createPublicInstance(tag, viewConfig, internalInstanceHandle) {
    if (PublicInstanceClass == null) {
        // We don't use inline requires in react-native, so this forces lazy loading
        // the right module to avoid eagerly loading both.
        if (_ReactNativeFeatureFlags.enableAccessToHostTreeInFabric()) {
            PublicInstanceClass = (__webpack_require__(10214)/* ["default"] */["default"]);
        } else {
            PublicInstanceClass = (__webpack_require__(95439)/* ["default"] */["default"]);
        }
    }
    return new PublicInstanceClass(tag, viewConfig, internalInstanceHandle);
}
function createPublicTextInstance(internalInstanceHandle) {
    if (ReadOnlyTextClass == null) {
        ReadOnlyTextClass = (__webpack_require__(37976)/* ["default"] */["default"]);
    }
    return new ReadOnlyTextClass(internalInstanceHandle);
}
function getNativeTagFromPublicInstance(publicInstance) {
    return publicInstance.__nativeTag;
}
function getNodeFromPublicInstance(publicInstance) {
    // Avoid loading ReactFabric if using an instance from the legacy renderer.
    if (publicInstance.__internalInstanceHandle == null) {
        return null;
    }
    if (ReactFabric == null) {
        ReactFabric = __webpack_require__(37445);
    }
    return ReactFabric.getNodeFromInternalInstanceHandle(publicInstance.__internalInstanceHandle);
}
function getInternalInstanceHandleFromPublicInstance(publicInstance) {
    // TODO(T174762768): Remove this once OSS versions of renderers will be synced.
    // $FlowExpectedError[prop-missing] Keeping this for backwards-compatibility with the renderers versions in open source.
    if (publicInstance._internalInstanceHandle != null) {
        // $FlowExpectedError[incompatible-return] Keeping this for backwards-compatibility with the renderers versions in open source.
        return publicInstance._internalInstanceHandle;
    }
    return publicInstance.__internalInstanceHandle;
}


}),
22861: (function (__unused_webpack_module, exports, __webpack_require__) {
/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * @format
 *      
 */ Object.defineProperty(exports, "__esModule", ({
    value: true
}));
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: Object.getOwnPropertyDescriptor(all, name).get
    });
}
_export(exports, {
    get create () {
        return create;
    },
    get diff () {
        return diff;
    }
});
var _interop_require_default = __webpack_require__(92766);
var _flattenStyle = /*#__PURE__*/ _interop_require_default._(__webpack_require__(34896));
var _deepDiffer = /*#__PURE__*/ _interop_require_default._(__webpack_require__(44654));
var emptyObject = {};
/**
 * Create a payload that contains all the updates between two sets of props.
 *
 * These helpers are all encapsulated into a single module, because they use
 * mutation as a performance optimization which leads to subtle shared
 * dependencies between the code paths. To avoid this mutable state leaking
 * across modules, I've kept them isolated to this module.
 */ // Tracks removed keys
var removedKeys = null;
var removedKeyCount = 0;
var deepDifferOptions = {
    unsafelyIgnoreFunctions: true
};
function defaultDiffer(prevProp, nextProp) {
    if (typeof nextProp !== 'object' || nextProp === null) {
        // Scalars have already been checked for equality
        return true;
    } else {
        // For objects and arrays, the default diffing algorithm is a deep compare
        return (0, _deepDiffer.default)(prevProp, nextProp, deepDifferOptions);
    }
}
function restoreDeletedValuesInNestedArray(updatePayload, node, validAttributes) {
    if (Array.isArray(node)) {
        var i = node.length;
        while(i-- && removedKeyCount > 0){
            restoreDeletedValuesInNestedArray(updatePayload, node[i], validAttributes);
        }
    } else if (node && removedKeyCount > 0) {
        var obj = node;
        for(var propKey in removedKeys){
            // $FlowFixMe[incompatible-use] found when upgrading Flow
            if (!removedKeys[propKey]) {
                continue;
            }
            var nextProp = obj[propKey];
            if (nextProp === undefined) {
                continue;
            }
            var attributeConfig = validAttributes[propKey];
            if (!attributeConfig) {
                continue; // not a valid native prop
            }
            if (typeof nextProp === 'function') {
                // $FlowFixMe[incompatible-type] found when upgrading Flow
                nextProp = true;
            }
            if (typeof nextProp === 'undefined') {
                // $FlowFixMe[incompatible-type] found when upgrading Flow
                nextProp = null;
            }
            if (typeof attributeConfig !== 'object') {
                // case: !Object is the default case
                updatePayload[propKey] = nextProp;
            } else if (typeof attributeConfig.diff === 'function' || typeof attributeConfig.process === 'function') {
                // case: CustomAttributeConfiguration
                var nextValue = typeof attributeConfig.process === 'function' ? attributeConfig.process(nextProp) : nextProp;
                updatePayload[propKey] = nextValue;
            }
            // $FlowFixMe[incompatible-use] found when upgrading Flow
            removedKeys[propKey] = false;
            removedKeyCount--;
        }
    }
}
function diffNestedArrayProperty(updatePayload, prevArray, nextArray, validAttributes) {
    var minLength = prevArray.length < nextArray.length ? prevArray.length : nextArray.length;
    var i;
    for(i = 0; i < minLength; i++){
        // Diff any items in the array in the forward direction. Repeated keys
        // will be overwritten by later values.
        updatePayload = diffNestedProperty(updatePayload, prevArray[i], nextArray[i], validAttributes);
    }
    for(; i < prevArray.length; i++){
        // Clear out all remaining properties.
        updatePayload = clearNestedProperty(updatePayload, prevArray[i], validAttributes);
    }
    for(; i < nextArray.length; i++){
        // Add all remaining properties.
        updatePayload = addNestedProperty(updatePayload, nextArray[i], validAttributes);
    }
    return updatePayload;
}
function diffNestedProperty(updatePayload, prevProp, nextProp, validAttributes) {
    if (!updatePayload && prevProp === nextProp) {
        // If no properties have been added, then we can bail out quickly on object
        // equality.
        return updatePayload;
    }
    if (!prevProp || !nextProp) {
        if (nextProp) {
            return addNestedProperty(updatePayload, nextProp, validAttributes);
        }
        if (prevProp) {
            return clearNestedProperty(updatePayload, prevProp, validAttributes);
        }
        return updatePayload;
    }
    if (!Array.isArray(prevProp) && !Array.isArray(nextProp)) {
        // Both are leaves, we can diff the leaves.
        return diffProperties(updatePayload, prevProp, nextProp, validAttributes);
    }
    if (Array.isArray(prevProp) && Array.isArray(nextProp)) {
        // Both are arrays, we can diff the arrays.
        return diffNestedArrayProperty(updatePayload, prevProp, nextProp, validAttributes);
    }
    if (Array.isArray(prevProp)) {
        return diffProperties(updatePayload, // $FlowFixMe - We know that this is always an object when the input is.
        (0, _flattenStyle.default)(prevProp), // $FlowFixMe - We know that this isn't an array because of above flow.
        nextProp, validAttributes);
    }
    return diffProperties(updatePayload, prevProp, // $FlowFixMe - We know that this is always an object when the input is.
    (0, _flattenStyle.default)(nextProp), validAttributes);
}
/**
 * addNestedProperty takes a single set of props and valid attribute
 * attribute configurations. It processes each prop and adds it to the
 * updatePayload.
 */ function addNestedProperty(updatePayload, nextProp, validAttributes) {
    if (!nextProp) {
        return updatePayload;
    }
    if (!Array.isArray(nextProp)) {
        // Add each property of the leaf.
        return addProperties(updatePayload, nextProp, validAttributes);
    }
    for(var i = 0; i < nextProp.length; i++){
        // Add all the properties of the array.
        updatePayload = addNestedProperty(updatePayload, nextProp[i], validAttributes);
    }
    return updatePayload;
}
/**
 * clearNestedProperty takes a single set of props and valid attributes. It
 * adds a null sentinel to the updatePayload, for each prop key.
 */ function clearNestedProperty(updatePayload, prevProp, validAttributes) {
    if (!prevProp) {
        return updatePayload;
    }
    if (!Array.isArray(prevProp)) {
        // Add each property of the leaf.
        return clearProperties(updatePayload, prevProp, validAttributes);
    }
    for(var i = 0; i < prevProp.length; i++){
        // Add all the properties of the array.
        updatePayload = clearNestedProperty(updatePayload, prevProp[i], validAttributes);
    }
    return updatePayload;
}
/**
 * diffProperties takes two sets of props and a set of valid attributes
 * and write to updatePayload the values that changed or were deleted.
 * If no updatePayload is provided, a new one is created and returned if
 * anything changed.
 */ function diffProperties(updatePayload, prevProps, nextProps, validAttributes) {
    var attributeConfig;
    var nextProp;
    var prevProp;
    for(var propKey in nextProps){
        attributeConfig = validAttributes[propKey];
        if (!attributeConfig) {
            continue; // not a valid native prop
        }
        prevProp = prevProps[propKey];
        nextProp = nextProps[propKey];
        // functions are converted to booleans as markers that the associated
        // events should be sent from native.
        if (typeof nextProp === 'function') {
            nextProp = true;
            // If nextProp is not a function, then don't bother changing prevProp
            // since nextProp will win and go into the updatePayload regardless.
            if (typeof prevProp === 'function') {
                prevProp = true;
            }
        }
        // An explicit value of undefined is treated as a null because it overrides
        // any other preceding value.
        if (typeof nextProp === 'undefined') {
            nextProp = null;
            if (typeof prevProp === 'undefined') {
                prevProp = null;
            }
        }
        if (removedKeys) {
            removedKeys[propKey] = false;
        }
        if (updatePayload && updatePayload[propKey] !== undefined) {
            // Something else already triggered an update to this key because another
            // value diffed. Since we're now later in the nested arrays our value is
            // more important so we need to calculate it and override the existing
            // value. It doesn't matter if nothing changed, we'll set it anyway.
            // Pattern match on: attributeConfig
            if (typeof attributeConfig !== 'object') {
                // case: !Object is the default case
                updatePayload[propKey] = nextProp;
            } else if (typeof attributeConfig.diff === 'function' || typeof attributeConfig.process === 'function') {
                // case: CustomAttributeConfiguration
                var nextValue = typeof attributeConfig.process === 'function' ? attributeConfig.process(nextProp) : nextProp;
                updatePayload[propKey] = nextValue;
            }
            continue;
        }
        if (prevProp === nextProp) {
            continue; // nothing changed
        }
        // Pattern match on: attributeConfig
        if (typeof attributeConfig !== 'object') {
            // case: !Object is the default case
            if (defaultDiffer(prevProp, nextProp)) {
                // a normal leaf has changed
                (updatePayload || (updatePayload = {}))[propKey] = nextProp;
            }
        } else if (typeof attributeConfig.diff === 'function' || typeof attributeConfig.process === 'function') {
            // case: CustomAttributeConfiguration
            var shouldUpdate = prevProp === undefined || (typeof attributeConfig.diff === 'function' ? attributeConfig.diff(prevProp, nextProp) : defaultDiffer(prevProp, nextProp));
            if (shouldUpdate) {
                var nextValue1 = typeof attributeConfig.process === 'function' ? attributeConfig.process(nextProp) : nextProp;
                (updatePayload || (updatePayload = {}))[propKey] = nextValue1;
            }
        } else {
            // default: fallthrough case when nested properties are defined
            removedKeys = null;
            removedKeyCount = 0;
            // We think that attributeConfig is not CustomAttributeConfiguration at
            // this point so we assume it must be AttributeConfiguration.
            updatePayload = diffNestedProperty(updatePayload, prevProp, nextProp, attributeConfig);
            if (removedKeyCount > 0 && updatePayload) {
                restoreDeletedValuesInNestedArray(updatePayload, nextProp, attributeConfig);
                removedKeys = null;
            }
        }
    }
    // Also iterate through all the previous props to catch any that have been
    // removed and make sure native gets the signal so it can reset them to the
    // default.
    for(var propKey1 in prevProps){
        if (nextProps[propKey1] !== undefined) {
            continue; // we've already covered this key in the previous pass
        }
        attributeConfig = validAttributes[propKey1];
        if (!attributeConfig) {
            continue; // not a valid native prop
        }
        if (updatePayload && updatePayload[propKey1] !== undefined) {
            continue;
        }
        prevProp = prevProps[propKey1];
        if (prevProp === undefined) {
            continue; // was already empty anyway
        }
        // Pattern match on: attributeConfig
        if (typeof attributeConfig !== 'object' || typeof attributeConfig.diff === 'function' || typeof attributeConfig.process === 'function') {
            // case: CustomAttributeConfiguration | !Object
            // Flag the leaf property for removal by sending a sentinel.
            (updatePayload || (updatePayload = {}))[propKey1] = null;
            if (!removedKeys) {
                removedKeys = {};
            }
            if (!removedKeys[propKey1]) {
                removedKeys[propKey1] = true;
                removedKeyCount++;
            }
        } else {
            // default:
            // This is a nested attribute configuration where all the properties
            // were removed so we need to go through and clear out all of them.
            updatePayload = clearNestedProperty(updatePayload, prevProp, attributeConfig);
        }
    }
    return updatePayload;
}
/**
 * addProperties adds all the valid props to the payload after being processed.
 */ function addProperties(updatePayload, props, validAttributes) {
    // TODO: Fast path
    return diffProperties(updatePayload, emptyObject, props, validAttributes);
}
/**
 * clearProperties clears all the previous props by adding a null sentinel
 * to the payload for each valid key.
 */ function clearProperties(updatePayload, prevProps, validAttributes) {
    // TODO: Fast path
    return diffProperties(updatePayload, prevProps, emptyObject, validAttributes);
}
function create(props, validAttributes) {
    return addProperties(null, props, validAttributes);
}
function diff(prevProps, nextProps, validAttributes) {
    return diffProperties(null, prevProps, nextProps, validAttributes);
}


}),
44296: (function (__unused_webpack_module, exports) {
/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * @format
 *       strict-local
 */ Object.defineProperty(exports, "__esModule", ({
    value: true
}));
Object.defineProperty(exports, "default", ({
    enumerable: true,
    get: function() {
        return warnForStyleProps;
    }
}));
function warnForStyleProps(props, validAttributes) {
    if (false) { var key }
}


}),
58686: (function (module, __unused_webpack_exports, __webpack_require__) {
/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * @format
 *       strict-local
 */ // flowlint unsafe-getters-setters:off
module.exports = {
    get BatchedBridge () {
        return __webpack_require__(61245);
    },
    get ExceptionsManager () {
        return __webpack_require__(45439);
    },
    get Platform () {
        return __webpack_require__(19496);
    },
    get RCTEventEmitter () {
        return __webpack_require__(57868);
    },
    get ReactNativeViewConfigRegistry () {
        return __webpack_require__(7080);
    },
    get TextInputState () {
        return __webpack_require__(6426);
    },
    get UIManager () {
        return __webpack_require__(69641);
    },
    // TODO: Remove when React has migrated to `createAttributePayload` and `diffAttributePayloads`
    get deepDiffer () {
        return __webpack_require__(44654);
    },
    get deepFreezeAndThrowOnMutationInDev () {
        return __webpack_require__(786);
    },
    // TODO: Remove when React has migrated to `createAttributePayload` and `diffAttributePayloads`
    get flattenStyle () {
        // $FlowFixMe[underconstrained-implicit-instantiation]
        // $FlowFixMe[incompatible-return]
        return __webpack_require__(34896);
    },
    get ReactFiberErrorDialog () {
        return (__webpack_require__(16324)/* ["default"] */["default"]);
    },
    get legacySendAccessibilityEvent () {
        return __webpack_require__(62505);
    },
    get RawEventEmitter () {
        return (__webpack_require__(79356)/* ["default"] */["default"]);
    },
    get CustomEvent () {
        return (__webpack_require__(58442)/* ["default"] */["default"]);
    },
    get createAttributePayload () {
        return (__webpack_require__(22861)/* .create */.create);
    },
    get diffAttributePayloads () {
        return (__webpack_require__(22861)/* .diff */.diff);
    },
    get createPublicInstance () {
        return (__webpack_require__(5030)/* .createPublicInstance */.createPublicInstance);
    },
    get createPublicTextInstance () {
        return (__webpack_require__(5030)/* .createPublicTextInstance */.createPublicTextInstance);
    },
    get getNativeTagFromPublicInstance () {
        return (__webpack_require__(5030)/* .getNativeTagFromPublicInstance */.getNativeTagFromPublicInstance);
    },
    get getNodeFromPublicInstance () {
        return (__webpack_require__(5030)/* .getNodeFromPublicInstance */.getNodeFromPublicInstance);
    },
    get getInternalInstanceHandleFromPublicInstance () {
        return (__webpack_require__(5030)/* .getInternalInstanceHandleFromPublicInstance */.getInternalInstanceHandleFromPublicInstance);
    }
};


}),
84618: (function (__unused_webpack_module, exports, __webpack_require__) {
/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 *       strict
 * @format
 */ /**
 * The JSDoc comments in this file have been extracted from [DOMRect](https://developer.mozilla.org/en-US/docs/Web/API/DOMRect).
 * Content by [Mozilla Contributors](https://developer.mozilla.org/en-US/docs/Web/API/DOMRect/contributors.txt),
 * licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/).
 */ Object.defineProperty(exports, "__esModule", ({
    value: true
}));
Object.defineProperty(exports, "default", ({
    enumerable: true,
    get: function() {
        return DOMRect;
    }
}));
var _call_super = __webpack_require__(54536);
var _class_call_check = __webpack_require__(83457);
var _create_class = __webpack_require__(10994);
var _inherits = __webpack_require__(80402);
var _interop_require_default = __webpack_require__(92766);
var _wrap_native_super = __webpack_require__(30938);
var _DOMRectReadOnly = /*#__PURE__*/ _interop_require_default._(__webpack_require__(89306));
var DOMRect = /*#__PURE__*/ function(DOMRectReadOnly) {
    "use strict";
    _inherits._(DOMRect, DOMRectReadOnly);
    function DOMRect() {
        _class_call_check._(this, DOMRect);
        return _call_super._(this, DOMRect, arguments);
    }
    _create_class._(DOMRect, [
        {
            key: "x",
            get: /**
   * The x coordinate of the `DOMRect`'s origin.
   */ function() {
                return this.__getInternalX();
            },
            set: function(x) {
                this.__setInternalX(x);
            }
        },
        {
            key: "y",
            get: /**
   * The y coordinate of the `DOMRect`'s origin.
   */ function() {
                return this.__getInternalY();
            },
            set: function(y) {
                this.__setInternalY(y);
            }
        },
        {
            key: "width",
            get: /**
   * The width of the `DOMRect`.
   */ function() {
                return this.__getInternalWidth();
            },
            set: function(width) {
                this.__setInternalWidth(width);
            }
        },
        {
            key: "height",
            get: /**
   * The height of the `DOMRect`.
   */ function() {
                return this.__getInternalHeight();
            },
            set: function(height) {
                this.__setInternalHeight(height);
            }
        }
    ], [
        {
            key: "fromRect",
            value: /**
   * Creates a new `DOMRect` object with a given location and dimensions.
   */ function fromRect(rect) {
                if (!rect) {
                    return new DOMRect();
                }
                return new DOMRect(rect.x, rect.y, rect.width, rect.height);
            }
        }
    ]);
    return DOMRect;
}(_wrap_native_super._(_DOMRectReadOnly.default));


}),
89306: (function (__unused_webpack_module, exports, __webpack_require__) {
/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 *       strict
 * @format
 */ /**
 * The JSDoc comments in this file have been extracted from [DOMRectReadOnly](https://developer.mozilla.org/en-US/docs/Web/API/DOMRectReadOnly).
 * Content by [Mozilla Contributors](https://developer.mozilla.org/en-US/docs/Web/API/DOMRectReadOnly/contributors.txt),
 * licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/).
 */ // flowlint sketchy-null:off, unsafe-getters-setters:off
Object.defineProperty(exports, "__esModule", ({
    value: true
}));
Object.defineProperty(exports, "default", ({
    enumerable: true,
    get: function() {
        return DOMRectReadOnly;
    }
}));
var _class_call_check = __webpack_require__(83457);
var _class_private_field_loose_base = __webpack_require__(53321);
var _class_private_field_loose_key = __webpack_require__(45889);
var _create_class = __webpack_require__(10994);
function castToNumber(value) {
    return value ? Number(value) : 0;
}
var _x = /*#__PURE__*/ _class_private_field_loose_key._("_x"), _y = /*#__PURE__*/ _class_private_field_loose_key._("_y"), _width = /*#__PURE__*/ _class_private_field_loose_key._("_width"), _height = /*#__PURE__*/ _class_private_field_loose_key._("_height");
var DOMRectReadOnly = /*#__PURE__*/ function() {
    "use strict";
    function DOMRectReadOnly(x, y, width, height) {
        _class_call_check._(this, DOMRectReadOnly);
        Object.defineProperty(this, _x, {
            writable: true,
            value: void 0
        });
        Object.defineProperty(this, _y, {
            writable: true,
            value: void 0
        });
        Object.defineProperty(this, _width, {
            writable: true,
            value: void 0
        });
        Object.defineProperty(this, _height, {
            writable: true,
            value: void 0
        });
        this.__setInternalX(x);
        this.__setInternalY(y);
        this.__setInternalWidth(width);
        this.__setInternalHeight(height);
    }
    _create_class._(DOMRectReadOnly, [
        {
            key: "x",
            get: /**
   * The x coordinate of the `DOMRectReadOnly`'s origin.
   */ function() {
                return _class_private_field_loose_base._(this, _x)[_x];
            }
        },
        {
            key: "y",
            get: /**
   * The y coordinate of the `DOMRectReadOnly`'s origin.
   */ function() {
                return _class_private_field_loose_base._(this, _y)[_y];
            }
        },
        {
            key: "width",
            get: /**
   * The width of the `DOMRectReadOnly`.
   */ function() {
                return _class_private_field_loose_base._(this, _width)[_width];
            }
        },
        {
            key: "height",
            get: /**
   * The height of the `DOMRectReadOnly`.
   */ function() {
                return _class_private_field_loose_base._(this, _height)[_height];
            }
        },
        {
            key: "top",
            get: /**
   * Returns the top coordinate value of the `DOMRect` (has the same value as `y`, or `y + height` if `height` is negative).
   */ function() {
                var height = _class_private_field_loose_base._(this, _height)[_height];
                var y = _class_private_field_loose_base._(this, _y)[_y];
                if (height < 0) {
                    return y + height;
                }
                return y;
            }
        },
        {
            key: "right",
            get: /**
   * Returns the right coordinate value of the `DOMRect` (has the same value as ``x + width`, or `x` if `width` is negative).
   */ function() {
                var width = _class_private_field_loose_base._(this, _width)[_width];
                var x = _class_private_field_loose_base._(this, _x)[_x];
                if (width < 0) {
                    return x;
                }
                return x + width;
            }
        },
        {
            key: "bottom",
            get: /**
   * Returns the bottom coordinate value of the `DOMRect` (has the same value as `y + height`, or `y` if `height` is negative).
   */ function() {
                var height = _class_private_field_loose_base._(this, _height)[_height];
                var y = _class_private_field_loose_base._(this, _y)[_y];
                if (height < 0) {
                    return y;
                }
                return y + height;
            }
        },
        {
            key: "left",
            get: /**
   * Returns the left coordinate value of the `DOMRect` (has the same value as `x`, or `x + width` if `width` is negative).
   */ function() {
                var width = _class_private_field_loose_base._(this, _width)[_width];
                var x = _class_private_field_loose_base._(this, _x)[_x];
                if (width < 0) {
                    return x + width;
                }
                return x;
            }
        },
        {
            key: "toJSON",
            value: function toJSON() {
                var _this = this, x = _this.x, y = _this.y, width = _this.width, height = _this.height, top = _this.top, left = _this.left, bottom = _this.bottom, right = _this.right;
                return {
                    x,
                    y,
                    width,
                    height,
                    top,
                    left,
                    bottom,
                    right
                };
            }
        },
        {
            key: "__getInternalX",
            value: function __getInternalX() {
                return _class_private_field_loose_base._(this, _x)[_x];
            }
        },
        {
            key: "__getInternalY",
            value: function __getInternalY() {
                return _class_private_field_loose_base._(this, _y)[_y];
            }
        },
        {
            key: "__getInternalWidth",
            value: function __getInternalWidth() {
                return _class_private_field_loose_base._(this, _width)[_width];
            }
        },
        {
            key: "__getInternalHeight",
            value: function __getInternalHeight() {
                return _class_private_field_loose_base._(this, _height)[_height];
            }
        },
        {
            key: "__setInternalX",
            value: function __setInternalX(x) {
                _class_private_field_loose_base._(this, _x)[_x] = castToNumber(x);
            }
        },
        {
            key: "__setInternalY",
            value: function __setInternalY(y) {
                _class_private_field_loose_base._(this, _y)[_y] = castToNumber(y);
            }
        },
        {
            key: "__setInternalWidth",
            value: function __setInternalWidth(width) {
                _class_private_field_loose_base._(this, _width)[_width] = castToNumber(width);
            }
        },
        {
            key: "__setInternalHeight",
            value: function __setInternalHeight(height) {
                _class_private_field_loose_base._(this, _height)[_height] = castToNumber(height);
            }
        }
    ], [
        {
            key: "fromRect",
            value: /**
   * Creates a new `DOMRectReadOnly` object with a given location and dimensions.
   */ function fromRect(rect) {
                if (!rect) {
                    return new DOMRectReadOnly();
                }
                return new DOMRectReadOnly(rect.x, rect.y, rect.width, rect.height);
            }
        }
    ]);
    return DOMRectReadOnly;
}();


}),
10214: (function (__unused_webpack_module, exports, __webpack_require__) {
var __webpack_unused_export__;
/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * @format
 *       strict-local
 */ // flowlint unsafe-getters-setters:off
__webpack_unused_export__ = ({
    value: true
});
Object.defineProperty(exports, "default", ({
    enumerable: true,
    get: function() {
        return ReactNativeElement;
    }
}));
var _call_super = __webpack_require__(54536);
var _class_call_check = __webpack_require__(83457);
var _class_private_field_loose_base = __webpack_require__(53321);
var _class_private_field_loose_key = __webpack_require__(45889);
var _create_class = __webpack_require__(10994);
var _inherits = __webpack_require__(80402);
var _interop_require_default = __webpack_require__(92766);
var _interop_require_wildcard = __webpack_require__(97427);
var _TextInputState = /*#__PURE__*/ _interop_require_default._(__webpack_require__(6426));
var _FabricUIManager = __webpack_require__(26651);
var _ReactNativeAttributePayload = __webpack_require__(22861);
var _warnForStyleProps = /*#__PURE__*/ _interop_require_default._(__webpack_require__(44296));
var _ReadOnlyElement = /*#__PURE__*/ _interop_require_wildcard._(__webpack_require__(4248));
var _ReadOnlyNode = /*#__PURE__*/ _interop_require_wildcard._(__webpack_require__(62266));
var _NativeDOM = /*#__PURE__*/ _interop_require_default._(__webpack_require__(70702));
var _nullthrows = /*#__PURE__*/ _interop_require_default._(__webpack_require__(43588));
var noop = ()=>{};
var _viewConfig = /*#__PURE__*/ _class_private_field_loose_key._("_viewConfig");
var ReactNativeElement = /*#__PURE__*/ function(ReadOnlyElement) {
    "use strict";
    _inherits._(ReactNativeElement, ReadOnlyElement);
    function ReactNativeElement(tag, viewConfig, internalInstanceHandle) {
        _class_call_check._(this, ReactNativeElement);
        var _this;
        _this = _call_super._(this, ReactNativeElement, [
            internalInstanceHandle
        ]), Object.defineProperty(_this, _viewConfig, {
            writable: true,
            value: void 0
        });
        _this.__nativeTag = tag;
        _this.__internalInstanceHandle = internalInstanceHandle;
        _class_private_field_loose_base._(_this, _viewConfig)[_viewConfig] = viewConfig;
        return _this;
    }
    _create_class._(ReactNativeElement, [
        {
            key: "offsetHeight",
            get: function() {
                return Math.round((0, _ReadOnlyElement.getBoundingClientRect)(this, {
                    includeTransform: false
                }).height);
            }
        },
        {
            key: "offsetLeft",
            get: function() {
                var node = (0, _ReadOnlyNode.getShadowNode)(this);
                if (node != null) {
                    var offset = _NativeDOM.default.getOffset(node);
                    return Math.round(offset[2]);
                }
                return 0;
            }
        },
        {
            key: "offsetParent",
            get: function() {
                var node = (0, _ReadOnlyNode.getShadowNode)(this);
                if (node != null) {
                    var offset = _NativeDOM.default.getOffset(node);
                    // For children of the root node we currently return offset data
                    // but a `null` parent because the root node is not accessible
                    // in JavaScript yet.
                    if (offset[0] != null) {
                        var offsetParentInstanceHandle = offset[0];
                        var offsetParent = (0, _ReadOnlyNode.getPublicInstanceFromInternalInstanceHandle)(offsetParentInstanceHandle);
                        // $FlowExpectedError[incompatible-type] The value returned by `getOffset` is always an instance handle for `ReadOnlyElement`.
                        var offsetParentElement = offsetParent;
                        return offsetParentElement;
                    }
                }
                return null;
            }
        },
        {
            key: "offsetTop",
            get: function() {
                var node = (0, _ReadOnlyNode.getShadowNode)(this);
                if (node != null) {
                    var offset = _NativeDOM.default.getOffset(node);
                    return Math.round(offset[1]);
                }
                return 0;
            }
        },
        {
            key: "offsetWidth",
            get: function() {
                return Math.round((0, _ReadOnlyElement.getBoundingClientRect)(this, {
                    includeTransform: false
                }).width);
            }
        },
        {
            /**
   * React Native compatibility methods
   */ key: "blur",
            value: function blur() {
                // $FlowFixMe[incompatible-exact] Migrate all usages of `NativeMethods` to an interface to fix this.
                _TextInputState.default.blurTextInput(this);
            }
        },
        {
            key: "focus",
            value: function focus() {
                // $FlowFixMe[incompatible-exact] Migrate all usages of `NativeMethods` to an interface to fix this.
                _TextInputState.default.focusTextInput(this);
            }
        },
        {
            key: "measure",
            value: function measure(callback) {
                var node = (0, _ReadOnlyNode.getShadowNode)(this);
                if (node != null) {
                    (0, _nullthrows.default)((0, _FabricUIManager.getFabricUIManager)()).measure(node, callback);
                }
            }
        },
        {
            key: "measureInWindow",
            value: function measureInWindow(callback) {
                var node = (0, _ReadOnlyNode.getShadowNode)(this);
                if (node != null) {
                    (0, _nullthrows.default)((0, _FabricUIManager.getFabricUIManager)()).measureInWindow(node, callback);
                }
            }
        },
        {
            key: "measureLayout",
            value: function measureLayout(relativeToNativeNode, onSuccess, onFail /* currently unused */ ) {
                if (!(relativeToNativeNode instanceof _ReadOnlyNode.default)) {
                    if (false) {}
                    return;
                }
                var toStateNode = (0, _ReadOnlyNode.getShadowNode)(this);
                var fromStateNode = (0, _ReadOnlyNode.getShadowNode)(relativeToNativeNode);
                if (toStateNode != null && fromStateNode != null) {
                    (0, _nullthrows.default)((0, _FabricUIManager.getFabricUIManager)()).measureLayout(toStateNode, fromStateNode, onFail != null ? onFail : noop, onSuccess != null ? onSuccess : noop);
                }
            }
        },
        {
            key: "setNativeProps",
            value: function setNativeProps(nativeProps) {
                if (false) {}
                var updatePayload = (0, _ReactNativeAttributePayload.create)(nativeProps, _class_private_field_loose_base._(this, _viewConfig)[_viewConfig].validAttributes);
                var node = (0, _ReadOnlyNode.getShadowNode)(this);
                if (node != null && updatePayload != null) {
                    (0, _nullthrows.default)((0, _FabricUIManager.getFabricUIManager)()).setNativeProps(node, updatePayload);
                }
            }
        }
    ]);
    return ReactNativeElement;
}(_ReadOnlyElement.default);


}),
47572: (function (__unused_webpack_module, exports, __webpack_require__) {
/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * @format
 *       strict-local
 */ // flowlint unsafe-getters-setters:off
Object.defineProperty(exports, "__esModule", ({
    value: true
}));
Object.defineProperty(exports, "default", ({
    enumerable: true,
    get: function() {
        return ReadOnlyCharacterData;
    }
}));
var _call_super = __webpack_require__(54536);
var _class_call_check = __webpack_require__(83457);
var _create_class = __webpack_require__(10994);
var _inherits = __webpack_require__(80402);
var _interop_require_default = __webpack_require__(92766);
var _interop_require_wildcard = __webpack_require__(97427);
var _ReadOnlyNode = /*#__PURE__*/ _interop_require_wildcard._(__webpack_require__(62266));
var _NativeDOM = /*#__PURE__*/ _interop_require_default._(__webpack_require__(70702));
var _Traversal = __webpack_require__(81510);
var ReadOnlyCharacterData = /*#__PURE__*/ function(ReadOnlyNode) {
    "use strict";
    _inherits._(ReadOnlyCharacterData, ReadOnlyNode);
    function ReadOnlyCharacterData() {
        _class_call_check._(this, ReadOnlyCharacterData);
        return _call_super._(this, ReadOnlyCharacterData, arguments);
    }
    _create_class._(ReadOnlyCharacterData, [
        {
            key: "nextElementSibling",
            get: function() {
                return (0, _Traversal.getElementSibling)(this, 'next');
            }
        },
        {
            key: "previousElementSibling",
            get: function() {
                return (0, _Traversal.getElementSibling)(this, 'previous');
            }
        },
        {
            key: "data",
            get: function() {
                var shadowNode = (0, _ReadOnlyNode.getShadowNode)(this);
                if (shadowNode != null) {
                    return _NativeDOM.default.getTextContent(shadowNode);
                }
                return '';
            }
        },
        {
            key: "length",
            get: function() {
                return this.data.length;
            }
        },
        {
            key: "textContent",
            get: /**
   * @override
   */ function() {
                return this.data;
            }
        },
        {
            key: "nodeValue",
            get: /**
   * @override
   */ function() {
                return this.data;
            }
        },
        {
            key: "substringData",
            value: function substringData(offset, count) {
                var data = this.data;
                if (offset < 0) {
                    throw new TypeError(`Failed to execute 'substringData' on 'CharacterData': The offset ${offset} is negative.`);
                }
                if (offset > data.length) {
                    throw new TypeError(`Failed to execute 'substringData' on 'CharacterData': The offset ${offset} is greater than the node's length (${data.length}).`);
                }
                var adjustedCount = count < 0 || count > data.length ? data.length : count;
                return data.slice(offset, offset + adjustedCount);
            }
        }
    ]);
    return ReadOnlyCharacterData;
}(_ReadOnlyNode.default);


}),
4248: (function (__unused_webpack_module, exports, __webpack_require__) {
/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * @format
 *       strict-local
 */ // flowlint unsafe-getters-setters:off
Object.defineProperty(exports, "__esModule", ({
    value: true
}));
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: Object.getOwnPropertyDescriptor(all, name).get
    });
}
_export(exports, {
    get default () {
        return ReadOnlyElement;
    },
    get getBoundingClientRect () {
        return getBoundingClientRect;
    }
});
var _call_super = __webpack_require__(54536);
var _class_call_check = __webpack_require__(83457);
var _create_class = __webpack_require__(10994);
var _inherits = __webpack_require__(80402);
var _interop_require_default = __webpack_require__(92766);
var _interop_require_wildcard = __webpack_require__(97427);
var _DOMRect = /*#__PURE__*/ _interop_require_default._(__webpack_require__(84618));
var _HTMLCollection = __webpack_require__(14889);
var _ReadOnlyNode = /*#__PURE__*/ _interop_require_wildcard._(__webpack_require__(62266));
var _NativeDOM = /*#__PURE__*/ _interop_require_default._(__webpack_require__(70702));
var _Traversal = __webpack_require__(81510);
var ReadOnlyElement = /*#__PURE__*/ function(ReadOnlyNode) {
    "use strict";
    _inherits._(ReadOnlyElement, ReadOnlyNode);
    function ReadOnlyElement() {
        _class_call_check._(this, ReadOnlyElement);
        return _call_super._(this, ReadOnlyElement, arguments);
    }
    _create_class._(ReadOnlyElement, [
        {
            key: "childElementCount",
            get: function() {
                return getChildElements(this).length;
            }
        },
        {
            key: "children",
            get: function() {
                return (0, _HTMLCollection.createHTMLCollection)(getChildElements(this));
            }
        },
        {
            key: "clientHeight",
            get: function() {
                var node = (0, _ReadOnlyNode.getShadowNode)(this);
                if (node != null) {
                    var innerSize = _NativeDOM.default.getInnerSize(node);
                    return innerSize[1];
                }
                return 0;
            }
        },
        {
            key: "clientLeft",
            get: function() {
                var node = (0, _ReadOnlyNode.getShadowNode)(this);
                if (node != null) {
                    var borderSize = _NativeDOM.default.getBorderWidth(node);
                    return borderSize[3];
                }
                return 0;
            }
        },
        {
            key: "clientTop",
            get: function() {
                var node = (0, _ReadOnlyNode.getShadowNode)(this);
                if (node != null) {
                    var borderSize = _NativeDOM.default.getBorderWidth(node);
                    return borderSize[0];
                }
                return 0;
            }
        },
        {
            key: "clientWidth",
            get: function() {
                var node = (0, _ReadOnlyNode.getShadowNode)(this);
                if (node != null) {
                    var innerSize = _NativeDOM.default.getInnerSize(node);
                    return innerSize[0];
                }
                return 0;
            }
        },
        {
            key: "firstElementChild",
            get: function() {
                var childElements = getChildElements(this);
                if (childElements.length === 0) {
                    return null;
                }
                return childElements[0];
            }
        },
        {
            key: "id",
            get: function() {
                var _instanceHandle_stateNode_canonical, _instanceHandle_stateNode;
                var instanceHandle = (0, _ReadOnlyNode.getInstanceHandle)(this);
                // TODO: migrate off this private React API
                // $FlowExpectedError[incompatible-use]
                var props = instanceHandle === null || instanceHandle === void 0 ? void 0 : (_instanceHandle_stateNode = instanceHandle.stateNode) === null || _instanceHandle_stateNode === void 0 ? void 0 : (_instanceHandle_stateNode_canonical = _instanceHandle_stateNode.canonical) === null || _instanceHandle_stateNode_canonical === void 0 ? void 0 : _instanceHandle_stateNode_canonical.currentProps;
                return (props === null || props === void 0 ? void 0 : props.id) ?? (props === null || props === void 0 ? void 0 : props.nativeID) ?? '';
            }
        },
        {
            key: "lastElementChild",
            get: function() {
                var childElements = getChildElements(this);
                if (childElements.length === 0) {
                    return null;
                }
                return childElements[childElements.length - 1];
            }
        },
        {
            key: "nextElementSibling",
            get: function() {
                return (0, _Traversal.getElementSibling)(this, 'next');
            }
        },
        {
            key: "nodeName",
            get: function() {
                return this.tagName;
            }
        },
        {
            key: "nodeType",
            get: function() {
                return _ReadOnlyNode.default.ELEMENT_NODE;
            }
        },
        {
            key: "nodeValue",
            get: function() {
                return null;
            },
            set: function(value) {}
        },
        {
            key: "previousElementSibling",
            get: function() {
                return (0, _Traversal.getElementSibling)(this, 'previous');
            }
        },
        {
            key: "scrollHeight",
            get: function() {
                var node = (0, _ReadOnlyNode.getShadowNode)(this);
                if (node != null) {
                    var scrollSize = _NativeDOM.default.getScrollSize(node);
                    return scrollSize[1];
                }
                return 0;
            }
        },
        {
            key: "scrollLeft",
            get: function() {
                var node = (0, _ReadOnlyNode.getShadowNode)(this);
                if (node != null) {
                    var scrollPosition = _NativeDOM.default.getScrollPosition(node);
                    return scrollPosition[0];
                }
                return 0;
            }
        },
        {
            key: "scrollTop",
            get: function() {
                var node = (0, _ReadOnlyNode.getShadowNode)(this);
                if (node != null) {
                    var scrollPosition = _NativeDOM.default.getScrollPosition(node);
                    return scrollPosition[1];
                }
                return 0;
            }
        },
        {
            key: "scrollWidth",
            get: function() {
                var node = (0, _ReadOnlyNode.getShadowNode)(this);
                if (node != null) {
                    var scrollSize = _NativeDOM.default.getScrollSize(node);
                    return scrollSize[0];
                }
                return 0;
            }
        },
        {
            key: "tagName",
            get: function() {
                var node = (0, _ReadOnlyNode.getShadowNode)(this);
                if (node != null) {
                    return _NativeDOM.default.getTagName(node);
                }
                return '';
            }
        },
        {
            key: "textContent",
            get: function() {
                var shadowNode = (0, _ReadOnlyNode.getShadowNode)(this);
                if (shadowNode != null) {
                    return _NativeDOM.default.getTextContent(shadowNode);
                }
                return '';
            }
        },
        {
            key: "getBoundingClientRect",
            value: function getBoundingClientRect1() {
                return getBoundingClientRect(this, {
                    includeTransform: true
                });
            }
        },
        {
            /**
   * Pointer Capture APIs
   */ key: "hasPointerCapture",
            value: function hasPointerCapture(pointerId) {
                var node = (0, _ReadOnlyNode.getShadowNode)(this);
                if (node != null) {
                    return _NativeDOM.default.hasPointerCapture(node, pointerId);
                }
                return false;
            }
        },
        {
            key: "setPointerCapture",
            value: function setPointerCapture(pointerId) {
                var node = (0, _ReadOnlyNode.getShadowNode)(this);
                if (node != null) {
                    _NativeDOM.default.setPointerCapture(node, pointerId);
                }
            }
        },
        {
            key: "releasePointerCapture",
            value: function releasePointerCapture(pointerId) {
                var node = (0, _ReadOnlyNode.getShadowNode)(this);
                if (node != null) {
                    _NativeDOM.default.releasePointerCapture(node, pointerId);
                }
            }
        }
    ]);
    return ReadOnlyElement;
}(_ReadOnlyNode.default);
function getChildElements(node) {
    // $FlowIssue[incompatible-call]
    return (0, _ReadOnlyNode.getChildNodes)(node).filter((childNode)=>childNode instanceof ReadOnlyElement);
}
function getBoundingClientRect(node, ref) {
    var includeTransform = ref.includeTransform;
    var shadowNode = (0, _ReadOnlyNode.getShadowNode)(node);
    if (shadowNode != null) {
        var rect = _NativeDOM.default.getBoundingClientRect(shadowNode, includeTransform);
        return new _DOMRect.default(rect[0], rect[1], rect[2], rect[3]);
    }
    // Empty rect if any of the above failed
    return new _DOMRect.default(0, 0, 0, 0);
}


}),
62266: (function (__unused_webpack_module, exports, __webpack_require__) {
/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * @format
 *       strict-local
 */ // flowlint unsafe-getters-setters:off
Object.defineProperty(exports, "__esModule", ({
    value: true
}));
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: Object.getOwnPropertyDescriptor(all, name).get
    });
}
_export(exports, {
    get default () {
        return ReadOnlyNode;
    },
    get getChildNodes () {
        return getChildNodes;
    },
    get getInstanceHandle () {
        return getInstanceHandle;
    },
    get getPublicInstanceFromInternalInstanceHandle () {
        return getPublicInstanceFromInternalInstanceHandle;
    },
    get getShadowNode () {
        return getShadowNode;
    }
});
var _class_call_check = __webpack_require__(83457);
var _create_class = __webpack_require__(10994);
var _interop_require_default = __webpack_require__(92766);
var _sliced_to_array = __webpack_require__(30067);
var _NodeList = __webpack_require__(29007);
var _NativeDOM = /*#__PURE__*/ _interop_require_default._(__webpack_require__(70702));
// We initialize this lazily to avoid a require cycle
// (`ReadOnlyElement` also depends on `ReadOnlyNode`).
var ReadOnlyElementClass;
var ReadOnlyNode = /*#__PURE__*/ function() {
    "use strict";
    function ReadOnlyNode(internalInstanceHandle) {
        _class_call_check._(this, ReadOnlyNode);
        setInstanceHandle(this, internalInstanceHandle);
    }
    _create_class._(ReadOnlyNode, [
        {
            key: "childNodes",
            get: function() {
                var childNodes = getChildNodes(this);
                return (0, _NodeList.createNodeList)(childNodes);
            }
        },
        {
            key: "firstChild",
            get: function() {
                var childNodes = getChildNodes(this);
                if (childNodes.length === 0) {
                    return null;
                }
                return childNodes[0];
            }
        },
        {
            key: "isConnected",
            get: function() {
                var shadowNode = getShadowNode(this);
                if (shadowNode == null) {
                    return false;
                }
                return _NativeDOM.default.isConnected(shadowNode);
            }
        },
        {
            key: "lastChild",
            get: function() {
                var childNodes = getChildNodes(this);
                if (childNodes.length === 0) {
                    return null;
                }
                return childNodes[childNodes.length - 1];
            }
        },
        {
            key: "nextSibling",
            get: function() {
                var _getNodeSiblingsAndPosition = _sliced_to_array._(getNodeSiblingsAndPosition(this), 2), siblings = _getNodeSiblingsAndPosition[0], position = _getNodeSiblingsAndPosition[1];
                if (position === siblings.length - 1) {
                    // this node is the last child of its parent, so there is no next sibling.
                    return null;
                }
                return siblings[position + 1];
            }
        },
        {
            key: "nodeName",
            get: /**
   * @abstract
   */ function() {
                throw new TypeError('`nodeName` is abstract and must be implemented in a subclass of `ReadOnlyNode`');
            }
        },
        {
            key: "nodeType",
            get: /**
   * @abstract
   */ function() {
                throw new TypeError('`nodeType` is abstract and must be implemented in a subclass of `ReadOnlyNode`');
            }
        },
        {
            key: "nodeValue",
            get: /**
   * @abstract
   */ function() {
                throw new TypeError('`nodeValue` is abstract and must be implemented in a subclass of `ReadOnlyNode`');
            }
        },
        {
            key: "parentElement",
            get: function() {
                var parentNode = this.parentNode;
                if (ReadOnlyElementClass == null) {
                    // We initialize this lazily to avoid a require cycle.
                    ReadOnlyElementClass = (__webpack_require__(4248)/* ["default"] */["default"]);
                }
                if (parentNode instanceof ReadOnlyElementClass) {
                    return parentNode;
                }
                return null;
            }
        },
        {
            key: "parentNode",
            get: function() {
                var shadowNode = getShadowNode(this);
                if (shadowNode == null) {
                    return null;
                }
                var parentInstanceHandle = _NativeDOM.default.getParentNode(shadowNode);
                if (parentInstanceHandle == null) {
                    return null;
                }
                return getPublicInstanceFromInternalInstanceHandle(parentInstanceHandle) ?? null;
            }
        },
        {
            key: "previousSibling",
            get: function() {
                var _getNodeSiblingsAndPosition = _sliced_to_array._(getNodeSiblingsAndPosition(this), 2), siblings = _getNodeSiblingsAndPosition[0], position = _getNodeSiblingsAndPosition[1];
                if (position === 0) {
                    // this node is the first child of its parent, so there is no previous sibling.
                    return null;
                }
                return siblings[position - 1];
            }
        },
        {
            key: "textContent",
            get: /**
   * @abstract
   */ function() {
                throw new TypeError('`textContent` is abstract and must be implemented in a subclass of `ReadOnlyNode`');
            }
        },
        {
            key: "compareDocumentPosition",
            value: function compareDocumentPosition(otherNode) {
                // Quick check to avoid having to call into Fabric if the nodes are the same.
                if (otherNode === this) {
                    return 0;
                }
                var shadowNode = getShadowNode(this);
                var otherShadowNode = getShadowNode(otherNode);
                if (shadowNode == null || otherShadowNode == null) {
                    return ReadOnlyNode.DOCUMENT_POSITION_DISCONNECTED;
                }
                return _NativeDOM.default.compareDocumentPosition(shadowNode, otherShadowNode);
            }
        },
        {
            key: "contains",
            value: function contains(otherNode) {
                if (otherNode === this) {
                    return true;
                }
                var position = this.compareDocumentPosition(otherNode);
                // eslint-disable-next-line no-bitwise
                return (position & ReadOnlyNode.DOCUMENT_POSITION_CONTAINED_BY) !== 0;
            }
        },
        {
            key: "getRootNode",
            value: function getRootNode() {
                // eslint-disable-next-line consistent-this
                var lastKnownParent = this;
                var nextPossibleParent = this.parentNode;
                while(nextPossibleParent != null){
                    lastKnownParent = nextPossibleParent;
                    nextPossibleParent = nextPossibleParent.parentNode;
                }
                return lastKnownParent;
            }
        },
        {
            key: "hasChildNodes",
            value: function hasChildNodes() {
                return getChildNodes(this).length > 0;
            }
        }
    ]);
    return ReadOnlyNode;
}();
/*
   * Node types, as returned by the `nodeType` property.
   */ /**
   * Type of Element, HTMLElement and ReactNativeElement instances.
   */ ReadOnlyNode.ELEMENT_NODE = 1;
/**
   * Currently Unused in React Native.
   */ ReadOnlyNode.ATTRIBUTE_NODE = 2;
/**
   * Text nodes.
   */ ReadOnlyNode.TEXT_NODE = 3;
/**
   * @deprecated Unused in React Native.
   */ ReadOnlyNode.CDATA_SECTION_NODE = 4;
/**
   * @deprecated
   */ ReadOnlyNode.ENTITY_REFERENCE_NODE = 5;
/**
   * @deprecated
   */ ReadOnlyNode.ENTITY_NODE = 6;
/**
   * @deprecated Unused in React Native.
   */ ReadOnlyNode.PROCESSING_INSTRUCTION_NODE = 7;
/**
   * @deprecated Unused in React Native.
   */ ReadOnlyNode.COMMENT_NODE = 8;
/**
   * @deprecated Unused in React Native.
   */ ReadOnlyNode.DOCUMENT_NODE = 9;
/**
   * @deprecated Unused in React Native.
   */ ReadOnlyNode.DOCUMENT_TYPE_NODE = 10;
/**
   * @deprecated Unused in React Native.
   */ ReadOnlyNode.DOCUMENT_FRAGMENT_NODE = 11;
/**
   * @deprecated
   */ ReadOnlyNode.NOTATION_NODE = 12;
/*
   * Document position flags. Used to check the return value of
   * `compareDocumentPosition()`.
   */ /**
   * Both nodes are in different documents.
   */ ReadOnlyNode.DOCUMENT_POSITION_DISCONNECTED = 1;
/**
   * `otherNode` precedes the node in either a pre-order depth-first traversal of a tree containing both
   * (e.g., as an ancestor or previous sibling or a descendant of a previous sibling or previous sibling of an ancestor)
   * or (if they are disconnected) in an arbitrary but consistent ordering.
   */ ReadOnlyNode.DOCUMENT_POSITION_PRECEDING = 2;
/**
   * `otherNode` follows the node in either a pre-order depth-first traversal of a tree containing both
   * (e.g., as a descendant or following sibling or a descendant of a following sibling or following sibling of an ancestor)
   * or (if they are disconnected) in an arbitrary but consistent ordering.
   */ ReadOnlyNode.DOCUMENT_POSITION_FOLLOWING = 4;
/**
   * `otherNode` is an ancestor of the node.
   */ ReadOnlyNode.DOCUMENT_POSITION_CONTAINS = 8;
/**
   * `otherNode` is a descendant of the node.
   */ ReadOnlyNode.DOCUMENT_POSITION_CONTAINED_BY = 16;
/**
   * @deprecated Unused in React Native.
   */ ReadOnlyNode.DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC = 32;
var INSTANCE_HANDLE_KEY = Symbol('internalInstanceHandle');
function getInstanceHandle(node) {
    // $FlowExpectedError[prop-missing]
    return node[INSTANCE_HANDLE_KEY];
}
function setInstanceHandle(node, instanceHandle) {
    // $FlowExpectedError[prop-missing]
    node[INSTANCE_HANDLE_KEY] = instanceHandle;
}
function getShadowNode(node) {
    // Lazy import Fabric here to avoid DOM Node APIs classes from having side-effects.
    // With a static import we can't use these classes for Paper-only variants.
    var ReactFabric = __webpack_require__(37445);
    return ReactFabric.getNodeFromInternalInstanceHandle(getInstanceHandle(node));
}
function getChildNodes(node) {
    var shadowNode = getShadowNode(node);
    if (shadowNode == null) {
        return [];
    }
    var childNodeInstanceHandles = _NativeDOM.default.getChildNodes(shadowNode);
    return childNodeInstanceHandles.map((instanceHandle)=>getPublicInstanceFromInternalInstanceHandle(instanceHandle)).filter(Boolean);
}
function getNodeSiblingsAndPosition(node) {
    var parent = node.parentNode;
    if (parent == null) {
        // This node is the root or it's disconnected.
        return [
            [
                node
            ],
            0
        ];
    }
    var siblings = getChildNodes(parent);
    var position = siblings.indexOf(node);
    if (position === -1) {
        throw new TypeError("Missing node in parent's child node list");
    }
    return [
        siblings,
        position
    ];
}
function getPublicInstanceFromInternalInstanceHandle(instanceHandle) {
    // Lazy import Fabric here to avoid DOM Node APIs classes from having side-effects.
    // With a static import we can't use these classes for Paper-only variants.
    var ReactFabric = __webpack_require__(37445);
    var mixedPublicInstance = ReactFabric.getPublicInstanceFromInternalInstanceHandle(instanceHandle);
    // $FlowExpectedError[incompatible-return] React defines public instances as "mixed" because it can't access the definition from React Native.
    return mixedPublicInstance;
}


}),
37976: (function (__unused_webpack_module, exports, __webpack_require__) {
var __webpack_unused_export__;
/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * @format
 *       strict-local
 */ // flowlint unsafe-getters-setters:off
__webpack_unused_export__ = ({
    value: true
});
Object.defineProperty(exports, "default", ({
    enumerable: true,
    get: function() {
        return ReadOnlyText;
    }
}));
var _call_super = __webpack_require__(54536);
var _class_call_check = __webpack_require__(83457);
var _create_class = __webpack_require__(10994);
var _inherits = __webpack_require__(80402);
var _interop_require_default = __webpack_require__(92766);
var _ReadOnlyCharacterData = /*#__PURE__*/ _interop_require_default._(__webpack_require__(47572));
var _ReadOnlyNode = /*#__PURE__*/ _interop_require_default._(__webpack_require__(62266));
var ReadOnlyText = /*#__PURE__*/ function(ReadOnlyCharacterData) {
    "use strict";
    _inherits._(ReadOnlyText, ReadOnlyCharacterData);
    function ReadOnlyText() {
        _class_call_check._(this, ReadOnlyText);
        return _call_super._(this, ReadOnlyText, arguments);
    }
    _create_class._(ReadOnlyText, [
        {
            key: "nodeName",
            get: /**
   * @override
   */ function() {
                return '#text';
            }
        },
        {
            key: "nodeType",
            get: /**
   * @override
   */ function() {
                return _ReadOnlyNode.default.TEXT_NODE;
            }
        }
    ]);
    return ReadOnlyText;
}(_ReadOnlyCharacterData.default);


}),
81510: (function (__unused_webpack_module, exports, __webpack_require__) {
/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * @format
 *       strict-local
 */ Object.defineProperty(exports, "__esModule", ({
    value: true
}));
Object.defineProperty(exports, "getElementSibling", ({
    enumerable: true,
    get: function() {
        return getElementSibling;
    }
}));
var _ReadOnlyNode = __webpack_require__(62266);
// We initialize this lazily to avoid a require cycle
// (`ReadOnlyElement` also depends on `Traversal`).
var ReadOnlyElementClass;
function getElementSibling(node, direction) {
    var parent = node.parentNode;
    if (parent == null) {
        // This node is the root or it's disconnected.
        return null;
    }
    var childNodes = (0, _ReadOnlyNode.getChildNodes)(parent);
    var startPosition = childNodes.indexOf(node);
    if (startPosition === -1) {
        return null;
    }
    var increment = direction === 'next' ? 1 : -1;
    var position = startPosition + increment;
    if (ReadOnlyElementClass == null) {
        // We initialize this lazily to avoid a require cycle.
        ReadOnlyElementClass = (__webpack_require__(4248)/* ["default"] */["default"]);
    }
    while(childNodes[position] != null && !(childNodes[position] instanceof ReadOnlyElementClass)){
        position = position + increment;
    }
    return childNodes[position] ?? null;
}


}),
11540: (function (__unused_webpack_module, exports) {
/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * @format
 *       strict
 */ /**
 * This definition is different from the current built-in type `$ArrayLike`
 * provided by Flow, in that this is an interface and that one is an object.
 *
 * The difference is important because, when using objects, Flow thinks
 * a `length` property would be copied over when using the spread operator,
 * which is incorrect.
 */ Object.defineProperty(exports, "__esModule", ({
    value: true
}));
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: Object.getOwnPropertyDescriptor(all, name).get
    });
}
_export(exports, {
    get createEntriesIterator () {
        return createEntriesIterator;
    },
    get createKeyIterator () {
        return createKeyIterator;
    },
    get createValueIterator () {
        return createValueIterator;
    }
});
function* createValueIterator(arrayLike) {
    for(var i = 0; i < arrayLike.length; i++){
        yield arrayLike[i];
    }
}
function* createKeyIterator(arrayLike) {
    for(var i = 0; i < arrayLike.length; i++){
        yield i;
    }
}
function* createEntriesIterator(arrayLike) {
    for(var i = 0; i < arrayLike.length; i++){
        yield [
            i,
            arrayLike[i]
        ];
    }
}


}),
14889: (function (__unused_webpack_module, exports, __webpack_require__) {
/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * @format
 *       strict
 */ // flowlint unsafe-getters-setters:off
Object.defineProperty(exports, "__esModule", ({
    value: true
}));
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: Object.getOwnPropertyDescriptor(all, name).get
    });
}
_export(exports, {
    get createHTMLCollection () {
        return createHTMLCollection;
    },
    get default () {
        return HTMLCollection;
    }
});
var _class_call_check = __webpack_require__(83457);
var _class_private_field_loose_base = __webpack_require__(53321);
var _class_private_field_loose_key = __webpack_require__(45889);
var _create_class = __webpack_require__(10994);
var _ArrayLikeUtils = __webpack_require__(11540);
var _length = /*#__PURE__*/ _class_private_field_loose_key._("_length");
var HTMLCollection = /*#__PURE__*/ function() {
    "use strict";
    function HTMLCollection(elements) {
        _class_call_check._(this, HTMLCollection);
        Object.defineProperty(this, _length, {
            writable: true,
            value: void 0
        });
        for(var i = 0; i < elements.length; i++){
            Object.defineProperty(this, i, {
                value: elements[i],
                enumerable: true,
                configurable: false,
                writable: false
            });
        }
        _class_private_field_loose_base._(this, _length)[_length] = elements.length;
    }
    _create_class._(HTMLCollection, [
        {
            key: "length",
            get: function() {
                return _class_private_field_loose_base._(this, _length)[_length];
            }
        },
        {
            key: "item",
            value: function item(index) {
                if (index < 0 || index >= _class_private_field_loose_base._(this, _length)[_length]) {
                    return null;
                }
                // assigning to the interface allows us to access the indexer property in a
                // type-safe way.
                // eslint-disable-next-line consistent-this
                var arrayLike = this;
                return arrayLike[index];
            }
        },
        {
            /**
   * @deprecated Unused in React Native.
   */ key: "namedItem",
            value: function namedItem(name) {
                return null;
            }
        },
        {
            // $FlowIssue[unsupported-syntax] Flow does not support computed properties in classes.
            key: Symbol.iterator,
            value: function() {
                return (0, _ArrayLikeUtils.createValueIterator)(this);
            }
        }
    ]);
    return HTMLCollection;
}();
function createHTMLCollection(elements) {
    return new HTMLCollection(elements);
}


}),
29007: (function (__unused_webpack_module, exports, __webpack_require__) {
/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * @format
 *       strict
 */ // flowlint unsafe-getters-setters:off
Object.defineProperty(exports, "__esModule", ({
    value: true
}));
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: Object.getOwnPropertyDescriptor(all, name).get
    });
}
_export(exports, {
    get createNodeList () {
        return createNodeList;
    },
    get default () {
        return NodeList;
    }
});
var _class_call_check = __webpack_require__(83457);
var _class_private_field_loose_base = __webpack_require__(53321);
var _class_private_field_loose_key = __webpack_require__(45889);
var _create_class = __webpack_require__(10994);
var _ArrayLikeUtils = __webpack_require__(11540);
var _length = /*#__PURE__*/ _class_private_field_loose_key._("_length");
var NodeList = /*#__PURE__*/ function() {
    "use strict";
    function NodeList(elements) {
        _class_call_check._(this, NodeList);
        Object.defineProperty(this, _length, {
            writable: true,
            value: void 0
        });
        for(var i = 0; i < elements.length; i++){
            Object.defineProperty(this, i, {
                value: elements[i],
                writable: false
            });
        }
        _class_private_field_loose_base._(this, _length)[_length] = elements.length;
    }
    _create_class._(NodeList, [
        {
            key: "length",
            get: function() {
                return _class_private_field_loose_base._(this, _length)[_length];
            }
        },
        {
            key: "item",
            value: function item(index) {
                if (index < 0 || index >= _class_private_field_loose_base._(this, _length)[_length]) {
                    return null;
                }
                // assigning to the interface allows us to access the indexer property in a
                // type-safe way.
                // eslint-disable-next-line consistent-this
                var arrayLike = this;
                return arrayLike[index];
            }
        },
        {
            key: "entries",
            value: function entries() {
                return (0, _ArrayLikeUtils.createEntriesIterator)(this);
            }
        },
        {
            key: "forEach",
            value: function forEach(callbackFn, thisArg) {
                // assigning to the interface allows us to access the indexer property in a
                // type-safe way.
                // eslint-disable-next-line consistent-this
                var arrayLike = this;
                for(var index = 0; index < _class_private_field_loose_base._(this, _length)[_length]; index++){
                    if (thisArg == null) {
                        callbackFn(arrayLike[index], index, this);
                    } else {
                        callbackFn.call(thisArg, arrayLike[index], index, this);
                    }
                }
            }
        },
        {
            key: "keys",
            value: function keys() {
                return (0, _ArrayLikeUtils.createKeyIterator)(this);
            }
        },
        {
            key: "values",
            value: function values() {
                return (0, _ArrayLikeUtils.createValueIterator)(this);
            }
        },
        {
            // $FlowIssue[unsupported-syntax] Flow does not support computed properties in classes.
            key: Symbol.iterator,
            value: function() {
                return (0, _ArrayLikeUtils.createValueIterator)(this);
            }
        }
    ]);
    return NodeList;
}();
function createNodeList(elements) {
    return new NodeList(elements);
}


}),

}]);//# sourceMappingURL=vendors-node_modules_react-native_Libraries_ReactPrivate_ReactNativePrivateInterface_js.chunk.bundle.map?platform=ios